using iTextSharp.text.pdf;
using iTextSharp.text;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Data.SqlClient;

namespace Sistema_de_Gerenciamento_da_Rede_de_Catadores_do_Ceará__Versão_Teste_
{
     class ReciboImprmircs : PdfPageEventHelper
    {
        string Cliente = null;
        string Troco = null;
        string Recebido = null;
        string Total = null;
        string Forma = null;
        string nomeAssociacao = null;
        string NomedoServidor = null;
        public ReciboImprmircs(string cliente, string troco, string recebido, string total, string forma, string nomeassociacao, string nomeservidor)
        {
            Cliente = cliente;
            Troco = troco;
            Recebido = recebido;
            Total = total;
            Forma = forma;
            nomeAssociacao = nomeassociacao;
            NomedoServidor = nomeservidor;
        }
        
        public override void OnEndPage(PdfWriter writer, Document document)
        {
            // base.OnEndPage(writer, document);
            PdfPTable Cabeçalho = new PdfPTable(1);
            Cabeçalho.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;
            Cabeçalho.DefaultCell.Border = 0;
            Cabeçalho.AddCell(new Paragraph());

            PdfPCell Celula = new PdfPCell((new Paragraph("Rede dos Catadores de Resíduos Sólidos Recicláveis do Estado do Ceará")));
            Celula.HorizontalAlignment = Element.ALIGN_CENTER;
            Celula.Border = 0;
            Cabeçalho.AddCell(Celula);
            Cabeçalho.AddCell(new Paragraph());
            Cabeçalho.WriteSelectedRows(0, -1, document.LeftMargin, writer.PageSize.GetTop(document.TopMargin) + 120, writer.DirectContent);

            PdfPTable PaginaNumero = new PdfPTable(1);
            PaginaNumero.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;
            PaginaNumero.SpacingBefore = 50;
            PdfPCell NumeroPagina = new PdfPCell((new Paragraph("Página" + writer.PageNumber)));
            NumeroPagina.HorizontalAlignment = Element.ALIGN_RIGHT;
            NumeroPagina.Border = 0;
            PaginaNumero.AddCell(NumeroPagina);
            PaginaNumero.WriteSelectedRows(0, -1, document.LeftMargin, writer.PageSize.GetBottom(document.BottomMargin) - 75, writer.DirectContent);

            try
            {
                SqlConnection Conectar = new SqlConnection("Data Source=DESKTOP-" + NomedoServidor + "\\SQLEXPRESS;Initial Catalog=SGRRC1;Integrated Security=True");
                Conectar.Open();
                SqlCommand cmd2 = new SqlCommand("select [EnderecoImagem] from [ASSOCIACAO] WHERE [Nome Fantasia] = '" + nomeAssociacao + "'", Conectar);
                var EnderecoImagem = cmd2.ExecuteScalar();
                string Endereco = EnderecoImagem.ToString();

                iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Endereco);
                LogotipoAssociacao.ScaleToFit(140f, 120f);
                LogotipoAssociacao.SetAbsolutePosition(650f, 475);
                document.Add(LogotipoAssociacao);
                Conectar.Close();
            }
            catch
            {

                iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\BRANCO.png");
                LogotipoAssociacao.ScaleToFit(140f, 120f);
                LogotipoAssociacao.SetAbsolutePosition(650f, 480);
                document.Add(LogotipoAssociacao);
            }

            PdfPTable TextoRelatorioColetasDia = new PdfPTable(1);
            TextoRelatorioColetasDia.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;
            TextoRelatorioColetasDia.SpacingBefore = 50;
            TextoRelatorioColetasDia.DefaultCell.Border = 0;
            TextoRelatorioColetasDia.AddCell(new Paragraph());

            PdfPCell CelulaRelatorioColetaDia = new PdfPCell((new Paragraph("RECIBO " + Cliente + " "+ DateTime.Now.ToString())));
            CelulaRelatorioColetaDia.HorizontalAlignment = Element.ALIGN_CENTER;
            CelulaRelatorioColetaDia.Border = 0;
            TextoRelatorioColetasDia.AddCell(CelulaRelatorioColetaDia);
            TextoRelatorioColetasDia.AddCell(new Paragraph());
            TextoRelatorioColetasDia.WriteSelectedRows(0, -1, document.LeftMargin, writer.PageSize.GetTop(document.TopMargin)+101, writer.DirectContent);

            

            PdfPTable RecebidoTabela = new PdfPTable(1);
            RecebidoTabela.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;
            RecebidoTabela.SpacingAfter = 50;
            PdfPCell RecebidoCelula = new PdfPCell((new Paragraph("Valor Pago: "+ Recebido)));
            RecebidoCelula.HorizontalAlignment = Element.ALIGN_CENTER;
            RecebidoCelula.Border = 0;
            RecebidoTabela.AddCell(RecebidoCelula);
            RecebidoTabela.WriteSelectedRows(0, -1, writer.PageSize.GetBottom(document.BottomMargin)-170, writer.PageSize.GetBottom(document.BottomMargin), writer.DirectContent);

            PdfPTable TrocoTabela = new PdfPTable(1);
            TrocoTabela.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;
            TrocoTabela.SpacingAfter = 50;
            PdfPCell TrocoCelula = new PdfPCell((new Paragraph("Troco: R$" + Troco)));
            TrocoCelula.HorizontalAlignment = Element.ALIGN_CENTER;
            TrocoCelula.Border = 0;
            TrocoTabela.AddCell(TrocoCelula);
            TrocoTabela.WriteSelectedRows(0, -1, writer.PageSize.GetBottom(document.BottomMargin) - 300, writer.PageSize.GetBottom(document.BottomMargin), writer.DirectContent);

            PdfPTable TotalTabela = new PdfPTable(1);
            TotalTabela.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;
            TotalTabela.SpacingAfter = 50;
            PdfPCell TotalCelula = new PdfPCell((new Paragraph("Total da compra: R$" + Total)));
            TotalCelula.HorizontalAlignment = Element.ALIGN_CENTER;
            TotalCelula.Border = 0;
            TotalTabela.AddCell(TotalCelula);
            TotalTabela.WriteSelectedRows(0, -1, writer.PageSize.GetBottom(document.BottomMargin) - 450, writer.PageSize.GetBottom(document.BottomMargin), writer.DirectContent);

            PdfPTable FormaTabela = new PdfPTable(1);
            FormaTabela.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;
            FormaTabela.SpacingAfter = 50;
            PdfPCell FormaCelula = new PdfPCell((new Paragraph("Forma de Pagamento: " + Forma)));
            FormaCelula.HorizontalAlignment = Element.ALIGN_CENTER;
            FormaCelula.Border = 0;
            FormaTabela.AddCell(FormaCelula);
            FormaTabela.WriteSelectedRows(0, -1, writer.PageSize.GetBottom(document.BottomMargin), writer.PageSize.GetBottom(document.BottomMargin), writer.DirectContent);

            iTextSharp.text.Image Logotipo = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\RededeCatadoresdoCeará.png");
            Logotipo.ScaleToFit(140f, 120f);
            Logotipo.SetAbsolutePosition(100f, 475f);
            document.Add(Logotipo);

            PdfPTable DatadaColeta = new PdfPTable(1);
            DatadaColeta.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;
            DatadaColeta.SpacingAfter = 50;
            
            PdfPTable HoraTempo = new PdfPTable(1);
            HoraTempo.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;

            PdfPCell TempoHora = new PdfPCell((new Paragraph("Data de emissão:" + DateTime.Now.ToString() + " " + nomeAssociacao)));
            TempoHora.HorizontalAlignment = Element.ALIGN_LEFT;
            TempoHora.Border = 0;
            HoraTempo.AddCell(TempoHora);
            HoraTempo.WriteSelectedRows(0, -1, document.LeftMargin, writer.PageSize.GetBottom(document.BottomMargin)-110, writer.DirectContent);

            PdfPTable LinhaAssinatura = new PdfPTable(1);
            LinhaAssinatura.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;
            LinhaAssinatura.SpacingAfter = 50;
            PdfPCell CelulaAssinatura = new PdfPCell((new Paragraph("______________________________________________________________________")));
            CelulaAssinatura.HorizontalAlignment = Element.ALIGN_CENTER;
            CelulaAssinatura.Border = 0;
            LinhaAssinatura.AddCell(CelulaAssinatura);
            LinhaAssinatura.WriteSelectedRows(0, -1, document.LeftMargin, writer.PageSize.GetBottom(document.BottomMargin) - 70, writer.DirectContent);

            PdfPTable LinhaAssinaturaTexto = new PdfPTable(1);
            LinhaAssinaturaTexto.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;
            PdfPCell CelulaAssinaturaTexto = new PdfPCell((new Paragraph("Linha de Assinatura")));
            CelulaAssinaturaTexto.HorizontalAlignment = Element.ALIGN_CENTER;
            CelulaAssinaturaTexto.Border = 0;
            LinhaAssinaturaTexto.AddCell(CelulaAssinaturaTexto);
            LinhaAssinaturaTexto.WriteSelectedRows(0, -1, document.LeftMargin, writer.PageSize.GetBottom(document.BottomMargin) - 90, writer.DirectContent);

        }

    }
}
