using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Security.Cryptography.X509Certificates;
using System.Configuration.Assemblies;
using System.Globalization;
using System.Data.SqlClient;
using Org.BouncyCastle.Asn1.IsisMtt.X509;

using System.IO;


namespace Sistema_de_Gerenciamento_da_Rede_de_Catadores_do_Ceará__Versão_Teste_
{
    public partial class AssociacaoEditar : Form
    {
        public AssociacaoEditar()
        {
            InitializeComponent();
        }

        //Carregamento das cidades
        private void EditarAssociacao_Load(object sender, EventArgs e)
        {
            string NomedoServidor = lbl_NomedoServidor.Text;
            string vqueryCidade = @"SELECT * FROM CIDADES ORDER BY ID_Cidade ASC ;";
            cbb_CidadeCadastroAssociacao.Items.Clear();
            cbb_CidadeCadastroAssociacao.DataSource = ConexaoBancodeDados.dql(vqueryCidade, NomedoServidor);
            cbb_CidadeCadastroAssociacao.DisplayMember = "Cidade";
            cbb_CidadeCadastroAssociacao.ValueMember = "ID_Cidade";
        }

        //Somente números são aceitos.
        private void txt_CNPJCadastroAssociacao_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;

            }
        }

        //Somente números são aceitos.
        private void txt_CEPCadastroAssociacao_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;

            }
        }

        //Somente letras são aceitas.
        private void txt_NomeFantasiaCadastrarAssociacao_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsLetter(e.KeyChar)) && !char.IsControl(e.KeyChar) && Convert.ToInt32(e.KeyChar) != 8 && Convert.ToInt32(e.KeyChar) != 32)
            {
                e.Handled = true;
            }
        }

        //Somente letras são aceitas.
        private void txt_RazaoSocialAssociacao_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsLetter(e.KeyChar)) && !char.IsControl(e.KeyChar) && Convert.ToInt32(e.KeyChar) != 8 && Convert.ToInt32(e.KeyChar) != 32)
            {
                e.Handled = true;
            }
        }

        //Somente letras são aceitas.
        private void txt_BairroCadastroAssociacao_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsLetter(e.KeyChar)) && !char.IsControl(e.KeyChar) && Convert.ToInt32(e.KeyChar) != 8 && Convert.ToInt32(e.KeyChar) != 32)
            {
                e.Handled = true;
            }
        }

        //Somente letras são aceitas.
        private void txt_RuaCadastroAssociacao_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && (!char.IsLetter(e.KeyChar)) && !char.IsControl(e.KeyChar) && Convert.ToInt32(e.KeyChar) != 8 && Convert.ToInt32(e.KeyChar) != 32)
            {
                e.Handled = true;
            }
        }

        //Somente números e '/' são aceitos.
        private void txt_DatadeCadastroCadastroAssociacao_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && !char.IsControl(e.KeyChar) && e.KeyChar != '/')
            {
                e.Handled = true;

            }
        }

        //Somente números e () são aceitos.
        private void txt_TelefoneCadastroAssociacao_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && !char.IsControl(e.KeyChar) && e.KeyChar != '(' && e.KeyChar != ')' && e.KeyChar != '-')
            {
                e.Handled = true;

            }
        }

        //fechar formulário.
        private void btn_CancelarCadastrarAssociacao_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        //Salvar alterações.
        private void btn_SalvarAlteracoes_Click(object sender, EventArgs e)
        {
            string format = "dd/MM/yyyy";
            string DatadeCadastro = txt_DatadeCadastroCadastroAssociacao.Text;
            DateTime dateTime;
            if (DateTime.TryParseExact(DatadeCadastro, format, CultureInfo.InvariantCulture, DateTimeStyles.AllowWhiteSpaces, out dateTime))
            {

                if (txt_NomeFantasiaCadastrarAssociacao.Text != "")
                {
                    if (txt_DatadeCadastroCadastroAssociacao.Text != "")
                    {

                        if (cbb_RegimedeTributacaoCadastroAssociacao.SelectedIndex != -1)
                        {
                            if (txt_CNPJCadastroAssociacao.Text != "")
                            {
                                if (txt_CEPCadastroAssociacao.Text != "")
                                {
                                    if (cbb_CidadeCadastroAssociacao.SelectedIndex != -1)
                                    {
                                        if (txt_TelefoneCadastroAssociacao.Text != "")
                                        {
                                            if (txt_BairroCadastroAssociacao.Text != "")
                                            {
                                                if (txt_RuaCadastroAssociacao.Text != "")
                                                {
                                                    if (txt_emailCadastroAssociacao.Text != "")
                                                    {
                                                        if (txt_RazaoSocialAssociacao.Text != "")
                                                        {
                                                            if (txt_ImagemPerfil.Text.Contains(".jpeg") || txt_ImagemPerfil.Text.Contains(".png") || txt_ImagemPerfil.Text.Contains(".jpg"))
                                                            {
                                                                var certeza = MessageBox.Show("Para concluir a operação será necessário encerrar a sessão. Deseja continuar?", "Deseja continuar", MessageBoxButtons.YesNo);
                                                                if (certeza == DialogResult.Yes)
                                                                {

                                                                    Criptografia cryptography = new Criptografia(System.Configuration.ConfigurationManager.AppSettings[""]);
                                                                    string NomeAssociacaoCrip = txt_NomeFantasiaCadastrarAssociacao.Text;
                                                                    string CidadeAssociacaoCrip = cryptography.Encriptar(cbb_CidadeCadastroAssociacao.Text);
                                                                    string BairroAssociacaoCrip = cryptography.Encriptar(txt_BairroCadastroAssociacao.Text);
                                                                    string RuaAssociacaoCrip = cryptography.Encriptar(txt_RuaCadastroAssociacao.Text);
                                                                    string DatadeCadastroCrip = cryptography.Encriptar(txt_DatadeCadastroCadastroAssociacao.Text);
                                                                    string CNPJCrip = cryptography.Encriptar(txt_CNPJCadastroAssociacao.Text);
                                                                    string RegimeTributacaoCrip = cbb_RegimedeTributacaoCadastroAssociacao.Text;
                                                                    string TelefoneCrip = cryptography.Encriptar(txt_TelefoneCadastroAssociacao.Text);
                                                                    string CEPCrip = cryptography.Encriptar(txt_CEPCadastroAssociacao.Text);
                                                                    string RazaoSocialCrip = txt_RazaoSocialAssociacao.Text;
                                                                    string emailCrip = cryptography.Encriptar(txt_emailCadastroAssociacao.Text);

                                                                    AssociacaoEditarClasse EditarAssociacao = new AssociacaoEditarClasse();
                                                                    EditarAssociacao.NomeFantasiaEditarAssociacao = NomeAssociacaoCrip;
                                                                    EditarAssociacao.CidadeEditarAssociacao = CidadeAssociacaoCrip;
                                                                    EditarAssociacao.BairroEditarAssociacao = BairroAssociacaoCrip;
                                                                    EditarAssociacao.RuaEditarAssociacao = RuaAssociacaoCrip;
                                                                    EditarAssociacao.DatadeCadastroEditarAssociacao = DatadeCadastroCrip;
                                                                    EditarAssociacao.CNPJEditarAssociacao = CNPJCrip;
                                                                    EditarAssociacao.RegimedeTributacaoEditarAssociacao = RegimeTributacaoCrip;
                                                                    EditarAssociacao.TelefoneEditarssociacao = TelefoneCrip;
                                                                    EditarAssociacao.CEPEditarAssociacao = CEPCrip;
                                                                    EditarAssociacao.RazaoSocialEditarAssociacao = RazaoSocialCrip;
                                                                    EditarAssociacao.emailEditarAssociacao = emailCrip;
                                                                    EditarAssociacao.MatriculaEditarAssociacao = lbl_Matricula.Text;
                                                                    EditarAssociacao.NomedoServidor = lbl_NomedoServidor.Text;
                                                                    EditarAssociacao.ImagemEditarAssociacao = txt_ImagemPerfil.Text;

                                                                    ConexaoBancodeDados.AssociacaoEditar(EditarAssociacao);
                                                                    this.Close();


                                                                    //Salvar alterações nas outras tabelas que utilizam o nome fantasia da associação.
                                                                    string nomedoservidor = lbl_NomedoServidor.Text;
                                                                    SqlConnection conexao = new SqlConnection("Data Source=DESKTOP-" + nomedoservidor + "\\SQLEXPRESS;Initial Catalog=SGRRC1;Integrated Security=True");
                                                                    conexao.Open();

                                                                    string UnidadeCrip = cryptography.Encriptar(txt_NomeFantasiaCadastrarAssociacao.Text);
                                                                    string atualizar = @"update CATADORES set [Unidade] = '" + txt_NomeFantasiaCadastrarAssociacao.Text + "' where [Unidade] = '" + lbl_NomeOriginal.Text + "';  update ADMINISTRADORES set [Unidade] = '" + txt_NomeFantasiaCadastrarAssociacao.Text + "' where [Unidade] = '" + lbl_NomeOriginal.Text + "'; update CATADORES set [Unidade] = '" + txt_NomeFantasiaCadastrarAssociacao.Text + "' where [Unidade] = '" + lbl_NomeOriginal.Text + "'; update CLIENTES set [Unidade] = '" + txt_NomeFantasiaCadastrarAssociacao.Text + "' where [Unidade] = '" + lbl_NomeOriginal.Text + "'; update COLETAS set [Unidade] = '" + txt_NomeFantasiaCadastrarAssociacao.Text + "' where [Unidade] = '" + lbl_NomeOriginal.Text + "'; update FUNCOES set [Unidade] = '" + txt_NomeFantasiaCadastrarAssociacao.Text + "' where [Unidade] = '" + lbl_NomeOriginal.Text + "'; update METERIAIS set [Unidade] = '" + UnidadeCrip + "' where [Unidade] = '" + cryptography.Encriptar(lbl_NomeOriginal.Text) + "'; update VENDAS set [Unidade] = '" + cryptography.Encriptar(txt_NomeFantasiaCadastrarAssociacao.Text) + "' where [Unidade] = '" + cryptography.Encriptar(lbl_NomeOriginal.Text) + "';";
                                                                    SqlCommand cmd = new SqlCommand(atualizar, conexao);
                                                                    cmd.ExecuteNonQuery();
                                                                    conexao.Close();
                                                                    Application.Exit();

                                                                }

                                                            }
                                                            else
                                                            {
                                                                MessageBox.Show("Selecione um formato de imagem válido (.png, .jpeg, .jpg)).");
                                                                return;
                                                            }


                                                        }
                                                        else
                                                        {
                                                            MessageBox.Show("Digite uma razão social.");
                                                            return;

                                                        }
                                                    }
                                                    else
                                                    {
                                                        MessageBox.Show("Digite um email.");
                                                        return;

                                                    }
                                                }
                                                else
                                                {
                                                    MessageBox.Show("Digite uma rua e um número");
                                                    return;
                                                }
                                            }
                                            else
                                            {

                                                MessageBox.Show("Digite um bairro.");
                                                return;
                                            }
                                        }
                                        else
                                        {
                                            MessageBox.Show("Digite um telefone.");
                                            return;

                                        }
                                    }
                                    else
                                    {
                                        MessageBox.Show("Escolha uma cidade.");
                                        return;

                                    }
                                }
                                else
                                {
                                    MessageBox.Show("Digite um CEP.");
                                    return;

                                }
                            }
                            else
                            {
                                MessageBox.Show("Digite um CNPJ");
                                return;
                            }
                        }
                        else
                        {
                            MessageBox.Show("Escolha um regime de tributação.");
                            return;

                        }
                    }
                    else
                    {
                        MessageBox.Show("Digite uma data de cadastro.");
                        return;

                    }
                }
                else
                {
                    MessageBox.Show("Digite um nome fantasia.");
                    return;

                }
            }
            else
            {
                MessageBox.Show("Digite um valor de data válido");
                return;
            }
        }
        
        //Alterar estilo do combobox do Regime de triburação
        private void cbb_RegimedeTributacaoCadastroAssociacao_SelectedIndexChanged(object sender, EventArgs e)
        {
            cbb_RegimedeTributacaoCadastroAssociacao.DropDownStyle = ComboBoxStyle.DropDownList;
        }

      

        //Exclusão da associação
        private void btn_ExcluirAssociacao_Click(object sender, EventArgs e)
        {
            string NomedoServidor = lbl_NomedoServidor.Text;
            var Aviso = MessageBox.Show("Esta ação será irreversível. Deseja continuar? Será necessário encerrar a sessão.", "Exclusão de cliente", MessageBoxButtons.YesNo);

            if (Aviso == DialogResult.Yes)
            {
                string IDdoCliente = lbl_Matricula.Text;
                string ExclusaoCliente = @"DELETE FROM ASSOCIACAO WHERE [ID_Associacao] ='" + IDdoCliente + "';";
                ConexaoBancodeDados.dql(ExclusaoCliente, NomedoServidor);
                MessageBox.Show("Associação excluída com sucesso!");
                Application.Exit();
            }
        }

        //Alterar estilo do combobox das Cidades
        private void cbb_CidadeCadastroAssociacao_Click(object sender, EventArgs e)
        {
            cbb_CidadeCadastroAssociacao.DropDownStyle = ComboBoxStyle.DropDownList;
        }

        //Abrir o Open File Dialog da busca de imagem.
        private void pictureBox1_Click(object sender, EventArgs e)
        {

            var fileContent = string.Empty;
            var filePath = string.Empty;

            using (OpenFileDialog openFileDialog = new OpenFileDialog())
            {
                openFileDialog.InitialDirectory = "c:\\";
                openFileDialog.Filter = @"JPEG (*.jpg; *.jpeg; *.jpe; *.jfif)|*.jpg; *.jpeg; *.jpe; *.jfif|PNG (*.png)|*.png*";
                //openFileDialog.Filter = "txt files (*.txt)|*.txt|All files (*.*)|*.*";
                openFileDialog.FilterIndex = 2;
                openFileDialog.RestoreDirectory = true;



                if (openFileDialog.ShowDialog() == DialogResult.OK)
                {
                    //Get the path of specified file
                    filePath = openFileDialog.FileName;
                    try
                    {
                        pictureBox1.ImageLocation = filePath.ToString();
                        pictureBox1.BackgroundImageLayout = ImageLayout.Zoom;
                        txt_ImagemPerfil.Text = filePath.ToString();
                    }
                    catch
                    {
                        MessageBox.Show("Selecione um arquivo de imagem válido.");
                        return;

                    }
                    //Read the contents of the file into a stream
                    var fileStream = openFileDialog.OpenFile();

                    using (StreamReader reader = new StreamReader(fileStream))
                    {
                        fileContent = reader.ReadToEnd();
                    }
                }


            }
        }
    }
}
