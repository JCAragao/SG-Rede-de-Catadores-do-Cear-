using Org.BouncyCastle.Crypto.Tls;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Drawing.Text;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Sistema_de_Gerenciamento_da_Rede_de_Catadores_do_Ceará__Versão_Teste_
{
    public partial class NovoAdministrador : Form
    {
        public NovoAdministrador()
        {
            InitializeComponent();
        }

        private void NovoAdministrador_Load(object sender, EventArgs e)
        {
            //Carregamento das cidades
            string Nomedoservidor = lbl_NomedoServidor.Text;
            string vqueryCidade = @"SELECT * FROM CIDADES ORDER BY ID_Cidade ASC ;";
            cbb_CidadeAdicionarAdministrador.Items.Clear();
            cbb_CidadeAdicionarAdministrador.DataSource = ConexaoBancodeDados.dql(vqueryCidade, Nomedoservidor);
            cbb_CidadeAdicionarAdministrador.DisplayMember = "Cidade";
            cbb_CidadeAdicionarAdministrador.ValueMember = "ID_Cidade";

            //Configuração dos Numeric Up and Down
            if (Globais.nivel == 0)
            {
                nud_0AdicionarAdministrador.Visible = true;
                nud_1AdicionarAdministrador.Visible = false;
            }

            if (Globais.nivel == 1)
            {
                nud_1AdicionarAdministrador.Visible = true;
                nud_0AdicionarAdministrador.Visible = false;
                cbb_NiveldeAcessoAdicionarAdministrador.Items.Clear();
                cbb_NiveldeAcessoAdicionarAdministrador.Items.Add(nud_1AdicionarAdministrador.Value);
                cbb_NiveldeAcessoAdicionarAdministrador.SelectedIndex = 0;


            }
        }

        //Revelar senha
        private void chb_MostrarSenhaAdicionarAdministrador_CheckedChanged(object sender, EventArgs e)
        {
            if (chb_MostrarSenhaAdicionarAdministrador.Checked == true)
            {
                txt_SenhaAdicionarAdministrador.UseSystemPasswordChar = false;
                txt_ConfirmarsenhaAdicionarAdministrador.UseSystemPasswordChar = false;

            }

            else
            {
                txt_SenhaAdicionarAdministrador.UseSystemPasswordChar = true;
                txt_ConfirmarsenhaAdicionarAdministrador.UseSystemPasswordChar = true;
            }
        }

        //Cadastrar novo administrador
        private void btn_AdicionarAdministradorAdicionarAdministrador_Click(object sender, EventArgs e)
        {
            {
                string format = "dd/MM/yyyy";
                string DatadeNascimento = txt_DatadeNascimentoAdicionarAdministrador.Text;
                DateTime dateTime;
                if (DateTime.TryParseExact(DatadeNascimento, format, CultureInfo.InvariantCulture, DateTimeStyles.AllowWhiteSpaces, out dateTime))
                {

                    string DatadaMatricula = txt_DatadeMatriculaAdicionarAdministrador.Text;
                    if (DateTime.TryParseExact(DatadaMatricula, format, CultureInfo.InvariantCulture, DateTimeStyles.AllowWhiteSpaces, out dateTime))
                    {

                        if (txt_NomeCompletoAdicionarAdministrado.Text != "")
                        {
                            if (txt_DatadeNascimentoAdicionarAdministrador.Text != "")
                            {

                                if (txt_DatadeMatriculaAdicionarAdministrador.Text != "")
                                {
                                    if (cbb_GeneroAdicionarAdministrador.SelectedIndex != -1)
                                    {
                                        if (txt_RGAdicionarAdministrador.Text != "")
                                        {
                                            if (txt_CPFAdicionarAdministrador.Text != "")
                                            {
                                                if (txt_NISAdicionarAdministrador.Text != "")
                                                {
                                                    if (txt_CEPAdicionarAdministrador.Text != "")
                                                    {
                                                        if (cbb_CidadeAdicionarAdministrador.SelectedIndex != -1)
                                                        {
                                                            if (txt_TelefoneAdicionarAdministrador.Text != "")
                                                            {
                                                                if (txt_BairroAdicionarAdministrador.Text != "")
                                                                {
                                                                    if (txt_RuaAdicionarAdministrador.Text != "")
                                                                    {
                                                                        if (txt_emailAdicionarAdministrador.Text != "")
                                                                        {
                                                                            if (txt_NomedeUsuarioAdicionarAdministrador.Text != "")
                                                                            {
                                                                                if (txt_SenhaAdicionarAdministrador.Text != "")
                                                                                {
                                                                                    if (txt_ConfirmarsenhaAdicionarAdministrador.Text != "")
                                                                                    {
                                                                                        if (txt_SenhaAdicionarAdministrador.Text == txt_ConfirmarsenhaAdicionarAdministrador.Text)
                                                                                        {
                                                                                            if (cbb_NiveldeAcessoAdicionarAdministrador.Text != "")
                                                                                            {
                                                                                                //Inserir a função padronizada 'CATADOR' na tabela funções

                                                                                                string NomedoServidor = lbl_NomedoServidor.Text;
                                                                                                SqlConnection Conectar2 = new SqlConnection("Data Source=DESKTOP-" + NomedoServidor + "\\SQLEXPRESS;Initial Catalog=SGRRC1;Integrated Security=True");
                                                                                                Conectar2.Open();

                                                                                                SqlCommand cmd1 = new SqlCommand(@"select count(*) as tables from ADMINISTRADORES ", Conectar2);
                                                                                                string NumerodeTabelas = cmd1.ExecuteScalar().ToString();

                                                                                                SqlCommand cmd2 = new SqlCommand("SELECT [Nome Fantasia] FROM ASSOCIACAO", Conectar2);
                                                                                                string NomeFanta = cmd2.ExecuteScalar().ToString();

                                                                                                SqlCommand cmd3 = new SqlCommand("Select [nud_Nivel] from ADMINISTRADORES where [nud_Nivel] = 0", Conectar2);
                                                                                                var Nivel = cmd3.ExecuteScalar();

                                                                                                if (NumerodeTabelas == "0")
                                                                                                {
                                                                                                    lbl_Usuario.Text = txt_NomedeUsuarioAdicionarAdministrador.Text;
                                                                                                    lbl_Unidade.Text = NomeFanta;

                                                                                                    SqlCommand cmd4 = new SqlCommand("INSERT INTO FUNCOES([Funcao], [Unidade])  VALUES ('CATADOR', '"+NomeFanta+"')", Conectar2);
                                                                                                    cmd4.ExecuteNonQuery();
                                                                                                }

                                                                                                if(Nivel == null)
                                                                                                {
                                                                                                    cbb_NiveldeAcessoAdicionarAdministrador.Text = "0";

                                                                                                }
                                                                                                Conectar2.Close();

                                                                                                Criptografia cryptography = new Criptografia(System.Configuration.ConfigurationManager.AppSettings[""]);
                                                                                                string BairroCrip = cryptography.Encriptar(txt_BairroAdicionarAdministrador.Text);
                                                                                                string CEPCrip = cryptography.Encriptar(txt_CEPAdicionarAdministrador.Text);
                                                                                                string CidadeCrip = cryptography.Encriptar(cbb_CidadeAdicionarAdministrador.Text);
                                                                                                string CPFCrip = cryptography.Encriptar(txt_CPFAdicionarAdministrador.Text);
                                                                                                string DatadeMatriculaCrip = cryptography.Encriptar(txt_DatadeMatriculaAdicionarAdministrador.Text);
                                                                                                string DatadeNascimentoCrip = cryptography.Encriptar(txt_DatadeNascimentoAdicionarAdministrador.Text);
                                                                                                string emailCrip = cryptography.Encriptar(txt_emailAdicionarAdministrador.Text);
                                                                                                string RuaCrip = cryptography.Encriptar(txt_RuaAdicionarAdministrador.Text);
                                                                                                string GeneroCrip = cryptography.Encriptar(cbb_GeneroAdicionarAdministrador.Text);
                                                                                                string LoginCrip = cryptography.Encriptar(txt_NomedeUsuarioAdicionarAdministrador.Text);
                                                                                                string NISCrip = cryptography.Encriptar(txt_NISAdicionarAdministrador.Text);
                                                                                                string RGCrip = cryptography.Encriptar(txt_RGAdicionarAdministrador.Text);
                                                                                                string TelefoneCrip = cryptography.Encriptar(txt_TelefoneAdicionarAdministrador.Text);
                                                                                                string SenhaCrip = cryptography.Encriptar(txt_SenhaAdicionarAdministrador.Text);

                                                                                                Administradorclasse ClasseAdministrador = new Administradorclasse();
                                                                                                ClasseAdministrador.BairroAdicionarAdministrador = BairroCrip;
                                                                                                ClasseAdministrador.CEPAdicionarAdministrador = CEPCrip;
                                                                                                ClasseAdministrador.CidadeAdicionarAdministrador = CidadeCrip;
                                                                                                ClasseAdministrador.CPFAdicionarAdministrador = CPFCrip;
                                                                                                ClasseAdministrador.DatadeMatriculaAdicionarAdministrador = DatadeMatriculaCrip;
                                                                                                ClasseAdministrador.DatadeNascimentoAdicionarAdministrador = DatadeNascimentoCrip;
                                                                                                ClasseAdministrador.emailAdicionarAdministrador = emailCrip;
                                                                                                ClasseAdministrador.EnderecoAdicionarAdministrador = RuaCrip;
                                                                                                ClasseAdministrador.GeneroAdicionarAdministrador = GeneroCrip;
                                                                                                ClasseAdministrador.LoginAdicionarAdministrador = LoginCrip;
                                                                                                ClasseAdministrador.NISAdicionarAdministrador = NISCrip;
                                                                                                ClasseAdministrador.NomeAdministradorAdicionarAdministrador = txt_NomeCompletoAdicionarAdministrado.Text;
                                                                                                ClasseAdministrador.RGAdicionarAdministrador = RGCrip;
                                                                                                ClasseAdministrador.SenhaAdicionarAdministrador = SenhaCrip;
                                                                                                ClasseAdministrador.TelefoneAdicionarAdministrador = TelefoneCrip;
                                                                                                ClasseAdministrador.NivelAdicionarAdministrador = Int32.Parse(cbb_NiveldeAcessoAdicionarAdministrador.Text);
                                                                                                ClasseAdministrador.UsuarioAdicionarAdministrado = lbl_Usuario.Text;
                                                                                                ClasseAdministrador.UnidadeAdicionarAdministrador = lbl_Unidade.Text;
                                                                                                ClasseAdministrador.Nomedoservidor = lbl_NomedoServidor.Text;

                                                                                                ConexaoBancodeDados.NovoAdministrador(ClasseAdministrador);
                                                                                                this.Close();
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                MessageBox.Show("Altere o valor para o nível desejado;");
                                                                                                return;

                                                                                            }

                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            MessageBox.Show("As senhas não correspondem.");
                                                                                            return;

                                                                                        }
                                                                                    }
                                                                                    else
                                                                                    {

                                                                                        MessageBox.Show("O campo Confirmar Senha não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                                                                        return;

                                                                                    }
                                                                                }
                                                                                else
                                                                                {

                                                                                    MessageBox.Show("O campo Senha não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                                                                    return;

                                                                                }
                                                                            }
                                                                            else
                                                                            {

                                                                                MessageBox.Show("O campo Nome de Usuário não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                                                                return;

                                                                            }
                                                                        }
                                                                        else
                                                                        {

                                                                            MessageBox.Show("O campo email não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                                                            return;

                                                                        }

                                                                    }
                                                                    else
                                                                    {

                                                                        MessageBox.Show("O campo Rua e Número não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                                                        return;

                                                                    }
                                                                }
                                                                else
                                                                {

                                                                    MessageBox.Show("O campo Bairro não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                                                    return;

                                                                }
                                                            }
                                                            else
                                                            {

                                                                MessageBox.Show("O campo Telefone não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                                                return;

                                                            }
                                                        }
                                                        else
                                                        {

                                                            MessageBox.Show("O campo Cidade não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                                            return;

                                                        }
                                                    }
                                                    else
                                                    {

                                                        MessageBox.Show("O campo CEP não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                                        return;

                                                    }
                                                }
                                                else
                                                {

                                                    MessageBox.Show("O campo NIS não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                                    return;

                                                }
                                            }
                                            else
                                            {

                                                MessageBox.Show("O campo CPF não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                                return;

                                            }
                                        }
                                        else
                                        {

                                            MessageBox.Show("O campo RG não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                            return;

                                        }
                                    }
                                    else
                                    {

                                        MessageBox.Show("O campo Gênero não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                        return;

                                    }
                                }
                                else
                                {

                                    MessageBox.Show("O campo Data de Matrícula não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                    return;

                                }
                            }
                            else
                            {

                                MessageBox.Show("O campo Data de Nascimento não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                                return;

                            }
                        }
                        else
                        {

                            MessageBox.Show("O campo Nome Completo não foi preenchido", "Campo inválido", MessageBoxButtons.OK);
                            return;

                        }
                    }
                    else
                    {
                        MessageBox.Show("Digite um valor válido de Data de matrícula.");
                        return;

                    }
                }
                else
                {
                    MessageBox.Show("Digite um valor válido de data de nascimento.");
                    return;

                }
            }

}

        //Garantir que existirá um administrador 0 mesmo que algum engano aconteça na hora do primeiro cadastro.
        private void nud_0AdicionarAdministrador_ValueChanged(object sender, EventArgs e)
        {
            cbb_NiveldeAcessoAdicionarAdministrador.Items.Clear();
            cbb_NiveldeAcessoAdicionarAdministrador.Items.Add(nud_0AdicionarAdministrador.Value);
            cbb_NiveldeAcessoAdicionarAdministrador.SelectedIndex = 0;
        }

       
        //Fechar formulário.
        private void btn_CancelarAdicionarAdministrador_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        //Somente letras são permitidas
        private void txt_NomeCompletoAdicionarAdministrado_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsLetter(e.KeyChar)) && !char.IsControl(e.KeyChar) && Convert.ToInt32(e.KeyChar) != 8 && Convert.ToInt32(e.KeyChar) != 32)
            {
                e.Handled = true;

            }
            else
            { e.Handled = false; }
        }

        //Somente números são permitidos
        private void txt_TelefoneAdicionarAdministrador_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && !char.IsControl(e.KeyChar) && e.KeyChar != '(' && e.KeyChar != ')' && e.KeyChar != '-')
            {
                e.Handled = true;
            }
            else
            { e.Handled = false; }
        }

        //Somente números e '/' são permitidos
        private void txt_DatadeNascimentoAdicionarAdministrador_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && !char.IsControl(e.KeyChar) && e.KeyChar != '/')
            {
                e.Handled = true;

            }
        }

        //Somente números e '/' são permitidos
        private void txt_DatadeMatriculaAdicionarAdministrador_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && !char.IsControl(e.KeyChar) && e.KeyChar != '/')
            {
                e.Handled = true;

            }
        }

        //Somente números são permitidos
        private void txt_RGAdicionarAdministrador_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;

            }
        }

        //Somente números são permitidos.
        private void txt_CPFAdicionarAdministrador_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;

            }
        }

        //Somente números são permitidos
        private void txt_NISAdicionarAdministrador_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;

            }
        }

        //Somente números são permitidos
        private void txt_CEPAdicionarAdministrador_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;

            }
        }

        //Somente letras são são permitidas
        private void txt_RuaAdicionarAdministrador_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && (!char.IsLetter(e.KeyChar)) && !char.IsControl(e.KeyChar) && Convert.ToInt32(e.KeyChar) != 8 && Convert.ToInt32(e.KeyChar) != 32)
            {
                e.Handled = true;
            }
        }

       
    }
}
