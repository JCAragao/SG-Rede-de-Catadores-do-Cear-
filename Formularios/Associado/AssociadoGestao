namespace Sistema_de_Gerenciamento_da_Rede_de_Catadores_do_Ceará__Versão_Teste_
{
    partial class AssociadoGestao
    {
        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            this.components = new System.ComponentModel.Container();
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AssociadoGestao));
            this.lbl_CatadorColetasGestao = new System.Windows.Forms.Label();
            this.cbb_AssociadoCatadorGestao = new System.Windows.Forms.ComboBox();
            this.btn_PesquisarAssociadoeMatriculaCatadorGestao = new System.Windows.Forms.Button();
            this.dgv_CatadorGestao = new System.Windows.Forms.DataGridView();
            this.iDCatadorDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.catadorDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.dataDeNascimentoDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.dataDeMatrículaDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.gêneroDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.telefoneDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.rGDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cPFDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.nISDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cidadeDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.bairroDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.ruaDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cEPDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.auxilioCatadorDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.administradorDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.unidadeDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.usuarioEditadoCatadorDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.dataEditadoCatadorDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.funcaoDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.matrículaDataGridViewTextBoxColumn = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cATADORESBindingSource = new System.Windows.Forms.BindingSource(this.components);
            this.sGRRC1DataSet5ESSEAQUI = new Sistema_de_Gerenciamento_da_Rede_de_Catadores_do_Ceará__Versão_Teste_.SGRRC1DataSet5ESSEAQUI();
            this.btn_ImprimirColetasGestao = new System.Windows.Forms.Button();
            this.button4 = new System.Windows.Forms.Button();
            this.btn_CancelarEditarColetasGestao = new System.Windows.Forms.Button();
            this.btn_ExcluirEditarColetasGestao = new System.Windows.Forms.Button();
            this.btn_EditarCatadorGestao = new System.Windows.Forms.Button();
            this.txt_MatriculaGestaoCatador = new System.Windows.Forms.TextBox();
            this.lbl_DatadeNascimentoCatadorGestao = new System.Windows.Forms.Label();
            this.btn_PesquisarPorCatadorCatadorGestao = new System.Windows.Forms.Button();
            this.btn_PesquisarporMatriculaCatadorGestao = new System.Windows.Forms.Button();
            this.rdb_PorAssociadoColetasGestao = new System.Windows.Forms.RadioButton();
            this.rdb_porData_ColetasGestao = new System.Windows.Forms.RadioButton();
            this.btn_MostrarFilhosCatadorGestao = new System.Windows.Forms.Button();
            this.btn_PesquisarApenasCatador = new System.Windows.Forms.Button();
            this.lbl_TotaldeCatadores = new System.Windows.Forms.Label();
            this.lbl_TotaldeCatadoresNumero = new System.Windows.Forms.Label();
            this.lbl_FemininoTotaldeCatadores = new System.Windows.Forms.Label();
            this.lbl_MasculinoTotaldeCatadores = new System.Windows.Forms.Label();
            this.lbl_FemininoTotaldeCatadoresNumero = new System.Windows.Forms.Label();
            this.lbl_MasculinoTotaldeCatadoresNumero = new System.Windows.Forms.Label();
            this.rdb_MostrarTodos = new System.Windows.Forms.RadioButton();
            this.btn_PesquisarporAssociacaoeMatricula = new System.Windows.Forms.Button();
            this.cbb_AssociacaoCatador = new System.Windows.Forms.ComboBox();
            this.lbl_Associacao = new System.Windows.Forms.Label();
            this.panel1 = new System.Windows.Forms.Panel();
            this.panel2 = new System.Windows.Forms.Panel();
            this.btn_PorAssociacaoCatador = new System.Windows.Forms.Button();
            this.btn_Funcoes = new System.Windows.Forms.Button();
            this.lbl_Unidade = new System.Windows.Forms.Label();
            this.chb_ApenasCatador = new System.Windows.Forms.CheckBox();
            this.lbl_NomedoServidor = new System.Windows.Forms.Label();
            this.cATADORESTableAdapter = new Sistema_de_Gerenciamento_da_Rede_de_Catadores_do_Ceará__Versão_Teste_.SGRRC1DataSet5ESSEAQUITableAdapters.CATADORESTableAdapter();
            this.chb_AuxilioCatador = new System.Windows.Forms.CheckBox();
            this.btn_AuxilioCatador = new System.Windows.Forms.Button();
            ((System.ComponentModel.ISupportInitialize)(this.dgv_CatadorGestao)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.cATADORESBindingSource)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.sGRRC1DataSet5ESSEAQUI)).BeginInit();
            this.panel1.SuspendLayout();
            this.panel2.SuspendLayout();
            this.SuspendLayout();
            // 
            // lbl_CatadorColetasGestao
            // 
            this.lbl_CatadorColetasGestao.AutoSize = true;
            this.lbl_CatadorColetasGestao.Location = new System.Drawing.Point(12, 9);
            this.lbl_CatadorColetasGestao.Name = "lbl_CatadorColetasGestao";
            this.lbl_CatadorColetasGestao.Size = new System.Drawing.Size(56, 13);
            this.lbl_CatadorColetasGestao.TabIndex = 24;
            this.lbl_CatadorColetasGestao.Text = "Associado";
            // 
            // cbb_AssociadoCatadorGestao
            // 
            this.cbb_AssociadoCatadorGestao.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cbb_AssociadoCatadorGestao.FormattingEnabled = true;
            this.cbb_AssociadoCatadorGestao.Location = new System.Drawing.Point(15, 23);
            this.cbb_AssociadoCatadorGestao.Name = "cbb_AssociadoCatadorGestao";
            this.cbb_AssociadoCatadorGestao.Size = new System.Drawing.Size(319, 21);
            this.cbb_AssociadoCatadorGestao.TabIndex = 23;
            this.cbb_AssociadoCatadorGestao.MouseEnter += new System.EventHandler(this.cbb_CatadorCatadorGestao_MouseEnter);
            // 
            // btn_PesquisarAssociadoeMatriculaCatadorGestao
            // 
            this.btn_PesquisarAssociadoeMatriculaCatadorGestao.Location = new System.Drawing.Point(370, 140);
            this.btn_PesquisarAssociadoeMatriculaCatadorGestao.Name = "btn_PesquisarAssociadoeMatriculaCatadorGestao";
            this.btn_PesquisarAssociadoeMatriculaCatadorGestao.Size = new System.Drawing.Size(75, 23);
            this.btn_PesquisarAssociadoeMatriculaCatadorGestao.TabIndex = 22;
            this.btn_PesquisarAssociadoeMatriculaCatadorGestao.Text = "Pesquisar";
            this.btn_PesquisarAssociadoeMatriculaCatadorGestao.UseVisualStyleBackColor = true;
            this.btn_PesquisarAssociadoeMatriculaCatadorGestao.Click += new System.EventHandler(this.btn_PesquisarCatadoreDataCatadorGestao_Click);
            // 
            // dgv_CatadorGestao
            // 
            this.dgv_CatadorGestao.AllowUserToAddRows = false;
            this.dgv_CatadorGestao.AllowUserToDeleteRows = false;
            this.dgv_CatadorGestao.AllowUserToResizeColumns = false;
            this.dgv_CatadorGestao.AllowUserToResizeRows = false;
            this.dgv_CatadorGestao.AutoGenerateColumns = false;
            this.dgv_CatadorGestao.CellBorderStyle = System.Windows.Forms.DataGridViewCellBorderStyle.Raised;
            this.dgv_CatadorGestao.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;
            this.dgv_CatadorGestao.Columns.AddRange(new System.Windows.Forms.DataGridViewColumn[] {
            this.iDCatadorDataGridViewTextBoxColumn,
            this.catadorDataGridViewTextBoxColumn,
            this.dataDeNascimentoDataGridViewTextBoxColumn,
            this.dataDeMatrículaDataGridViewTextBoxColumn,
            this.gêneroDataGridViewTextBoxColumn,
            this.telefoneDataGridViewTextBoxColumn,
            this.rGDataGridViewTextBoxColumn,
            this.cPFDataGridViewTextBoxColumn,
            this.nISDataGridViewTextBoxColumn,
            this.cidadeDataGridViewTextBoxColumn,
            this.bairroDataGridViewTextBoxColumn,
            this.ruaDataGridViewTextBoxColumn,
            this.cEPDataGridViewTextBoxColumn,
            this.auxilioCatadorDataGridViewTextBoxColumn,
            this.administradorDataGridViewTextBoxColumn,
            this.unidadeDataGridViewTextBoxColumn,
            this.usuarioEditadoCatadorDataGridViewTextBoxColumn,
            this.dataEditadoCatadorDataGridViewTextBoxColumn,
            this.funcaoDataGridViewTextBoxColumn,
            this.matrículaDataGridViewTextBoxColumn});
            this.dgv_CatadorGestao.DataSource = this.cATADORESBindingSource;
            this.dgv_CatadorGestao.Location = new System.Drawing.Point(18, 50);
            this.dgv_CatadorGestao.MultiSelect = false;
            this.dgv_CatadorGestao.Name = "dgv_CatadorGestao";
            this.dgv_CatadorGestao.ReadOnly = true;
            this.dgv_CatadorGestao.RowHeadersVisible = false;
            this.dgv_CatadorGestao.Size = new System.Drawing.Size(303, 223);
            this.dgv_CatadorGestao.TabIndex = 19;
            this.dgv_CatadorGestao.MouseEnter += new System.EventHandler(this.dgv_CatadorGestao_MouseEnter);
            // 
            // iDCatadorDataGridViewTextBoxColumn
            // 
            this.iDCatadorDataGridViewTextBoxColumn.DataPropertyName = "ID_Catador";
            this.iDCatadorDataGridViewTextBoxColumn.HeaderText = "ID_Catador";
            this.iDCatadorDataGridViewTextBoxColumn.Name = "iDCatadorDataGridViewTextBoxColumn";
            this.iDCatadorDataGridViewTextBoxColumn.ReadOnly = true;
            this.iDCatadorDataGridViewTextBoxColumn.Visible = false;
            // 
            // catadorDataGridViewTextBoxColumn
            // 
            this.catadorDataGridViewTextBoxColumn.DataPropertyName = "Catador";
            this.catadorDataGridViewTextBoxColumn.HeaderText = "Associado";
            this.catadorDataGridViewTextBoxColumn.Name = "catadorDataGridViewTextBoxColumn";
            this.catadorDataGridViewTextBoxColumn.ReadOnly = true;
            this.catadorDataGridViewTextBoxColumn.Width = 350;
            // 
            // dataDeNascimentoDataGridViewTextBoxColumn
            // 
            this.dataDeNascimentoDataGridViewTextBoxColumn.DataPropertyName = "Data de Nascimento";
            this.dataDeNascimentoDataGridViewTextBoxColumn.HeaderText = "Data de Nascimento";
            this.dataDeNascimentoDataGridViewTextBoxColumn.Name = "dataDeNascimentoDataGridViewTextBoxColumn";
            this.dataDeNascimentoDataGridViewTextBoxColumn.ReadOnly = true;
            this.dataDeNascimentoDataGridViewTextBoxColumn.Visible = false;
            // 
            // dataDeMatrículaDataGridViewTextBoxColumn
            // 
            this.dataDeMatrículaDataGridViewTextBoxColumn.DataPropertyName = "Data de Matrícula";
            this.dataDeMatrículaDataGridViewTextBoxColumn.HeaderText = "Data de Matrícula";
            this.dataDeMatrículaDataGridViewTextBoxColumn.Name = "dataDeMatrículaDataGridViewTextBoxColumn";
            this.dataDeMatrículaDataGridViewTextBoxColumn.ReadOnly = true;
            this.dataDeMatrículaDataGridViewTextBoxColumn.Visible = false;
            // 
            // gêneroDataGridViewTextBoxColumn
            // 
            this.gêneroDataGridViewTextBoxColumn.DataPropertyName = "Gênero";
            this.gêneroDataGridViewTextBoxColumn.HeaderText = "Gênero";
            this.gêneroDataGridViewTextBoxColumn.Name = "gêneroDataGridViewTextBoxColumn";
            this.gêneroDataGridViewTextBoxColumn.ReadOnly = true;
            this.gêneroDataGridViewTextBoxColumn.Visible = false;
            // 
            // telefoneDataGridViewTextBoxColumn
            // 
            this.telefoneDataGridViewTextBoxColumn.DataPropertyName = "Telefone";
            this.telefoneDataGridViewTextBoxColumn.HeaderText = "Telefone";
            this.telefoneDataGridViewTextBoxColumn.Name = "telefoneDataGridViewTextBoxColumn";
            this.telefoneDataGridViewTextBoxColumn.ReadOnly = true;
            this.telefoneDataGridViewTextBoxColumn.Visible = false;
            // 
            // rGDataGridViewTextBoxColumn
            // 
            this.rGDataGridViewTextBoxColumn.DataPropertyName = "RG";
            this.rGDataGridViewTextBoxColumn.HeaderText = "RG";
            this.rGDataGridViewTextBoxColumn.Name = "rGDataGridViewTextBoxColumn";
            this.rGDataGridViewTextBoxColumn.ReadOnly = true;
            this.rGDataGridViewTextBoxColumn.Visible = false;
            // 
            // cPFDataGridViewTextBoxColumn
            // 
            this.cPFDataGridViewTextBoxColumn.DataPropertyName = "CPF";
            this.cPFDataGridViewTextBoxColumn.HeaderText = "CPF";
            this.cPFDataGridViewTextBoxColumn.Name = "cPFDataGridViewTextBoxColumn";
            this.cPFDataGridViewTextBoxColumn.ReadOnly = true;
            this.cPFDataGridViewTextBoxColumn.Visible = false;
            // 
            // nISDataGridViewTextBoxColumn
            // 
            this.nISDataGridViewTextBoxColumn.DataPropertyName = "NIS";
            this.nISDataGridViewTextBoxColumn.HeaderText = "NIS";
            this.nISDataGridViewTextBoxColumn.Name = "nISDataGridViewTextBoxColumn";
            this.nISDataGridViewTextBoxColumn.ReadOnly = true;
            this.nISDataGridViewTextBoxColumn.Visible = false;
            // 
            // cidadeDataGridViewTextBoxColumn
            // 
            this.cidadeDataGridViewTextBoxColumn.DataPropertyName = "Cidade";
            this.cidadeDataGridViewTextBoxColumn.HeaderText = "Cidade";
            this.cidadeDataGridViewTextBoxColumn.Name = "cidadeDataGridViewTextBoxColumn";
            this.cidadeDataGridViewTextBoxColumn.ReadOnly = true;
            this.cidadeDataGridViewTextBoxColumn.Visible = false;
            // 
            // bairroDataGridViewTextBoxColumn
            // 
            this.bairroDataGridViewTextBoxColumn.DataPropertyName = "Bairro";
            this.bairroDataGridViewTextBoxColumn.HeaderText = "Bairro";
            this.bairroDataGridViewTextBoxColumn.Name = "bairroDataGridViewTextBoxColumn";
            this.bairroDataGridViewTextBoxColumn.ReadOnly = true;
            this.bairroDataGridViewTextBoxColumn.Visible = false;
            // 
            // ruaDataGridViewTextBoxColumn
            // 
            this.ruaDataGridViewTextBoxColumn.DataPropertyName = "Rua";
            this.ruaDataGridViewTextBoxColumn.HeaderText = "Rua";
            this.ruaDataGridViewTextBoxColumn.Name = "ruaDataGridViewTextBoxColumn";
            this.ruaDataGridViewTextBoxColumn.ReadOnly = true;
            this.ruaDataGridViewTextBoxColumn.Visible = false;
            // 
            // cEPDataGridViewTextBoxColumn
            // 
            this.cEPDataGridViewTextBoxColumn.DataPropertyName = "CEP";
            this.cEPDataGridViewTextBoxColumn.HeaderText = "CEP";
            this.cEPDataGridViewTextBoxColumn.Name = "cEPDataGridViewTextBoxColumn";
            this.cEPDataGridViewTextBoxColumn.ReadOnly = true;
            this.cEPDataGridViewTextBoxColumn.Visible = false;
            // 
            // auxilioCatadorDataGridViewTextBoxColumn
            // 
            this.auxilioCatadorDataGridViewTextBoxColumn.DataPropertyName = "AuxilioCatador";
            this.auxilioCatadorDataGridViewTextBoxColumn.HeaderText = "AuxilioCatador";
            this.auxilioCatadorDataGridViewTextBoxColumn.Name = "auxilioCatadorDataGridViewTextBoxColumn";
            this.auxilioCatadorDataGridViewTextBoxColumn.ReadOnly = true;
            this.auxilioCatadorDataGridViewTextBoxColumn.Visible = false;
            // 
            // administradorDataGridViewTextBoxColumn
            // 
            this.administradorDataGridViewTextBoxColumn.DataPropertyName = "Administrador";
            this.administradorDataGridViewTextBoxColumn.HeaderText = "Administrador";
            this.administradorDataGridViewTextBoxColumn.Name = "administradorDataGridViewTextBoxColumn";
            this.administradorDataGridViewTextBoxColumn.ReadOnly = true;
            this.administradorDataGridViewTextBoxColumn.Visible = false;
            // 
            // unidadeDataGridViewTextBoxColumn
            // 
            this.unidadeDataGridViewTextBoxColumn.DataPropertyName = "Unidade";
            this.unidadeDataGridViewTextBoxColumn.HeaderText = "Unidade";
            this.unidadeDataGridViewTextBoxColumn.Name = "unidadeDataGridViewTextBoxColumn";
            this.unidadeDataGridViewTextBoxColumn.ReadOnly = true;
            // 
            // usuarioEditadoCatadorDataGridViewTextBoxColumn
            // 
            this.usuarioEditadoCatadorDataGridViewTextBoxColumn.DataPropertyName = "UsuarioEditadoCatador";
            this.usuarioEditadoCatadorDataGridViewTextBoxColumn.HeaderText = "UsuarioEditadoCatador";
            this.usuarioEditadoCatadorDataGridViewTextBoxColumn.Name = "usuarioEditadoCatadorDataGridViewTextBoxColumn";
            this.usuarioEditadoCatadorDataGridViewTextBoxColumn.ReadOnly = true;
            this.usuarioEditadoCatadorDataGridViewTextBoxColumn.Visible = false;
            // 
            // dataEditadoCatadorDataGridViewTextBoxColumn
            // 
            this.dataEditadoCatadorDataGridViewTextBoxColumn.DataPropertyName = "DataEditadoCatador";
            this.dataEditadoCatadorDataGridViewTextBoxColumn.HeaderText = "DataEditadoCatador";
            this.dataEditadoCatadorDataGridViewTextBoxColumn.Name = "dataEditadoCatadorDataGridViewTextBoxColumn";
            this.dataEditadoCatadorDataGridViewTextBoxColumn.ReadOnly = true;
            this.dataEditadoCatadorDataGridViewTextBoxColumn.Visible = false;
            // 
            // funcaoDataGridViewTextBoxColumn
            // 
            this.funcaoDataGridViewTextBoxColumn.DataPropertyName = "Funcao";
            this.funcaoDataGridViewTextBoxColumn.HeaderText = "Funcao";
            this.funcaoDataGridViewTextBoxColumn.Name = "funcaoDataGridViewTextBoxColumn";
            this.funcaoDataGridViewTextBoxColumn.ReadOnly = true;
            this.funcaoDataGridViewTextBoxColumn.Visible = false;
            // 
            // matrículaDataGridViewTextBoxColumn
            // 
            this.matrículaDataGridViewTextBoxColumn.DataPropertyName = "Matrícula";
            this.matrículaDataGridViewTextBoxColumn.HeaderText = "Matrícula";
            this.matrículaDataGridViewTextBoxColumn.Name = "matrículaDataGridViewTextBoxColumn";
            this.matrículaDataGridViewTextBoxColumn.ReadOnly = true;
            this.matrículaDataGridViewTextBoxColumn.Visible = false;
            // 
            // cATADORESBindingSource
            // 
            this.cATADORESBindingSource.DataMember = "CATADORES";
            this.cATADORESBindingSource.DataSource = this.sGRRC1DataSet5ESSEAQUI;
            // 
            // sGRRC1DataSet5ESSEAQUI
            // 
            this.sGRRC1DataSet5ESSEAQUI.DataSetName = "SGRRC1DataSet5ESSEAQUI";
            this.sGRRC1DataSet5ESSEAQUI.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // btn_ImprimirColetasGestao
            // 
            this.btn_ImprimirColetasGestao.Location = new System.Drawing.Point(367, 285);
            this.btn_ImprimirColetasGestao.Name = "btn_ImprimirColetasGestao";
            this.btn_ImprimirColetasGestao.Size = new System.Drawing.Size(75, 23);
            this.btn_ImprimirColetasGestao.TabIndex = 33;
            this.btn_ImprimirColetasGestao.Text = "Imprimir";
            this.btn_ImprimirColetasGestao.UseVisualStyleBackColor = true;
            this.btn_ImprimirColetasGestao.Click += new System.EventHandler(this.btn_ImprimirColetasGestao_Click);
            // 
            // button4
            // 
            this.button4.Location = new System.Drawing.Point(609, 299);
            this.button4.Name = "button4";
            this.button4.Size = new System.Drawing.Size(129, 23);
            this.button4.TabIndex = 32;
            this.button4.Text = "Enviar par a central";
            this.button4.UseVisualStyleBackColor = true;
            // 
            // btn_CancelarEditarColetasGestao
            // 
            this.btn_CancelarEditarColetasGestao.Location = new System.Drawing.Point(367, 316);
            this.btn_CancelarEditarColetasGestao.Name = "btn_CancelarEditarColetasGestao";
            this.btn_CancelarEditarColetasGestao.Size = new System.Drawing.Size(75, 23);
            this.btn_CancelarEditarColetasGestao.TabIndex = 31;
            this.btn_CancelarEditarColetasGestao.Text = "Cancelar";
            this.btn_CancelarEditarColetasGestao.UseVisualStyleBackColor = true;
            this.btn_CancelarEditarColetasGestao.Click += new System.EventHandler(this.btn_CancelarEditarColetasGestao_Click);
            // 
            // btn_ExcluirEditarColetasGestao
            // 
            this.btn_ExcluirEditarColetasGestao.Location = new System.Drawing.Point(370, 198);
            this.btn_ExcluirEditarColetasGestao.Name = "btn_ExcluirEditarColetasGestao";
            this.btn_ExcluirEditarColetasGestao.Size = new System.Drawing.Size(75, 23);
            this.btn_ExcluirEditarColetasGestao.TabIndex = 30;
            this.btn_ExcluirEditarColetasGestao.Text = "Excluir";
            this.btn_ExcluirEditarColetasGestao.UseVisualStyleBackColor = true;
            this.btn_ExcluirEditarColetasGestao.Click += new System.EventHandler(this.btn_ExcluirEditarColetasGestao_Click);
            // 
            // btn_EditarCatadorGestao
            // 
            this.btn_EditarCatadorGestao.Location = new System.Drawing.Point(370, 169);
            this.btn_EditarCatadorGestao.Name = "btn_EditarCatadorGestao";
            this.btn_EditarCatadorGestao.Size = new System.Drawing.Size(75, 23);
            this.btn_EditarCatadorGestao.TabIndex = 29;
            this.btn_EditarCatadorGestao.Text = "Editar";
            this.btn_EditarCatadorGestao.UseVisualStyleBackColor = true;
            this.btn_EditarCatadorGestao.Click += new System.EventHandler(this.btn_EditarCatadorGestao_Click);
            // 
            // txt_MatriculaGestaoCatador
            // 
            this.txt_MatriculaGestaoCatador.Location = new System.Drawing.Point(339, 24);
            this.txt_MatriculaGestaoCatador.MaxLength = 50;
            this.txt_MatriculaGestaoCatador.Name = "txt_MatriculaGestaoCatador";
            this.txt_MatriculaGestaoCatador.Size = new System.Drawing.Size(65, 20);
            this.txt_MatriculaGestaoCatador.TabIndex = 20;
            this.txt_MatriculaGestaoCatador.KeyPress += new System.Windows.Forms.KeyPressEventHandler(this.txt_DigitedaColetaCatadorGestao_KeyPress);
            // 
            // lbl_DatadeNascimentoCatadorGestao
            // 
            this.lbl_DatadeNascimentoCatadorGestao.AutoSize = true;
            this.lbl_DatadeNascimentoCatadorGestao.Location = new System.Drawing.Point(336, 8);
            this.lbl_DatadeNascimentoCatadorGestao.Name = "lbl_DatadeNascimentoCatadorGestao";
            this.lbl_DatadeNascimentoCatadorGestao.Size = new System.Drawing.Size(65, 13);
            this.lbl_DatadeNascimentoCatadorGestao.TabIndex = 21;
            this.lbl_DatadeNascimentoCatadorGestao.Text = "nº Matrícula";
            // 
            // btn_PesquisarPorCatadorCatadorGestao
            // 
            this.btn_PesquisarPorCatadorCatadorGestao.Location = new System.Drawing.Point(370, 140);
            this.btn_PesquisarPorCatadorCatadorGestao.Name = "btn_PesquisarPorCatadorCatadorGestao";
            this.btn_PesquisarPorCatadorCatadorGestao.Size = new System.Drawing.Size(75, 23);
            this.btn_PesquisarPorCatadorCatadorGestao.TabIndex = 27;
            this.btn_PesquisarPorCatadorCatadorGestao.Text = "Pesquisar";
            this.btn_PesquisarPorCatadorCatadorGestao.UseVisualStyleBackColor = true;
            this.btn_PesquisarPorCatadorCatadorGestao.Visible = false;
            this.btn_PesquisarPorCatadorCatadorGestao.Click += new System.EventHandler(this.btn_PesquisarPorCatadorCatadorGestao_Click);
            // 
            // btn_PesquisarporMatriculaCatadorGestao
            // 
            this.btn_PesquisarporMatriculaCatadorGestao.Location = new System.Drawing.Point(370, 140);
            this.btn_PesquisarporMatriculaCatadorGestao.Name = "btn_PesquisarporMatriculaCatadorGestao";
            this.btn_PesquisarporMatriculaCatadorGestao.Size = new System.Drawing.Size(75, 23);
            this.btn_PesquisarporMatriculaCatadorGestao.TabIndex = 28;
            this.btn_PesquisarporMatriculaCatadorGestao.Text = "Pesquisar";
            this.btn_PesquisarporMatriculaCatadorGestao.UseVisualStyleBackColor = true;
            this.btn_PesquisarporMatriculaCatadorGestao.Visible = false;
            this.btn_PesquisarporMatriculaCatadorGestao.Click += new System.EventHandler(this.btn_PesquisarporDataCatadorGestao_Click);
            // 
            // rdb_PorAssociadoColetasGestao
            // 
            this.rdb_PorAssociadoColetasGestao.AutoSize = true;
            this.rdb_PorAssociadoColetasGestao.Location = new System.Drawing.Point(3, 2);
            this.rdb_PorAssociadoColetasGestao.Name = "rdb_PorAssociadoColetasGestao";
            this.rdb_PorAssociadoColetasGestao.Size = new System.Drawing.Size(92, 17);
            this.rdb_PorAssociadoColetasGestao.TabIndex = 25;
            this.rdb_PorAssociadoColetasGestao.TabStop = true;
            this.rdb_PorAssociadoColetasGestao.Text = "por Associado";
            this.rdb_PorAssociadoColetasGestao.UseVisualStyleBackColor = true;
            this.rdb_PorAssociadoColetasGestao.CheckedChanged += new System.EventHandler(this.rdb_PorAssociadoColetasGestao_CheckedChanged);
            // 
            // rdb_porData_ColetasGestao
            // 
            this.rdb_porData_ColetasGestao.AutoSize = true;
            this.rdb_porData_ColetasGestao.Location = new System.Drawing.Point(3, 20);
            this.rdb_porData_ColetasGestao.Name = "rdb_porData_ColetasGestao";
            this.rdb_porData_ColetasGestao.Size = new System.Drawing.Size(101, 17);
            this.rdb_porData_ColetasGestao.TabIndex = 26;
            this.rdb_porData_ColetasGestao.TabStop = true;
            this.rdb_porData_ColetasGestao.Text = "por nº Matrícula";
            this.rdb_porData_ColetasGestao.UseVisualStyleBackColor = true;
            this.rdb_porData_ColetasGestao.CheckedChanged += new System.EventHandler(this.rdb_porMatriculaCatadorGestao_CheckedChanged);
            // 
            // btn_MostrarFilhosCatadorGestao
            // 
            this.btn_MostrarFilhosCatadorGestao.Location = new System.Drawing.Point(370, 256);
            this.btn_MostrarFilhosCatadorGestao.Name = "btn_MostrarFilhosCatadorGestao";
            this.btn_MostrarFilhosCatadorGestao.Size = new System.Drawing.Size(75, 23);
            this.btn_MostrarFilhosCatadorGestao.TabIndex = 34;
            this.btn_MostrarFilhosCatadorGestao.Text = "Filhos";
            this.btn_MostrarFilhosCatadorGestao.UseVisualStyleBackColor = true;
            this.btn_MostrarFilhosCatadorGestao.Click += new System.EventHandler(this.btn_MostrarFilhosCatadorGestao_Click);
            // 
            // btn_PesquisarApenasCatador
            // 
            this.btn_PesquisarApenasCatador.Location = new System.Drawing.Point(370, 140);
            this.btn_PesquisarApenasCatador.Name = "btn_PesquisarApenasCatador";
            this.btn_PesquisarApenasCatador.Size = new System.Drawing.Size(75, 23);
            this.btn_PesquisarApenasCatador.TabIndex = 35;
            this.btn_PesquisarApenasCatador.Text = "Pesquisar";
            this.btn_PesquisarApenasCatador.UseVisualStyleBackColor = true;
            this.btn_PesquisarApenasCatador.Visible = false;
            this.btn_PesquisarApenasCatador.Click += new System.EventHandler(this.btn_PesquisarApenasCatador_Click);
            // 
            // lbl_TotaldeCatadores
            // 
            this.lbl_TotaldeCatadores.AutoSize = true;
            this.lbl_TotaldeCatadores.Location = new System.Drawing.Point(160, 284);
            this.lbl_TotaldeCatadores.Name = "lbl_TotaldeCatadores";
            this.lbl_TotaldeCatadores.Size = new System.Drawing.Size(31, 13);
            this.lbl_TotaldeCatadores.TabIndex = 37;
            this.lbl_TotaldeCatadores.Text = "Total";
            // 
            // lbl_TotaldeCatadoresNumero
            // 
            this.lbl_TotaldeCatadoresNumero.AutoSize = true;
            this.lbl_TotaldeCatadoresNumero.Location = new System.Drawing.Point(160, 298);
            this.lbl_TotaldeCatadoresNumero.Name = "lbl_TotaldeCatadoresNumero";
            this.lbl_TotaldeCatadoresNumero.Size = new System.Drawing.Size(35, 13);
            this.lbl_TotaldeCatadoresNumero.TabIndex = 38;
            this.lbl_TotaldeCatadoresNumero.Text = "label1";
            // 
            // lbl_FemininoTotaldeCatadores
            // 
            this.lbl_FemininoTotaldeCatadores.AutoSize = true;
            this.lbl_FemininoTotaldeCatadores.Location = new System.Drawing.Point(127, 316);
            this.lbl_FemininoTotaldeCatadores.Name = "lbl_FemininoTotaldeCatadores";
            this.lbl_FemininoTotaldeCatadores.Size = new System.Drawing.Size(19, 13);
            this.lbl_FemininoTotaldeCatadores.TabIndex = 39;
            this.lbl_FemininoTotaldeCatadores.Text = "(F)";
            // 
            // lbl_MasculinoTotaldeCatadores
            // 
            this.lbl_MasculinoTotaldeCatadores.AutoSize = true;
            this.lbl_MasculinoTotaldeCatadores.Location = new System.Drawing.Point(195, 316);
            this.lbl_MasculinoTotaldeCatadores.Name = "lbl_MasculinoTotaldeCatadores";
            this.lbl_MasculinoTotaldeCatadores.Size = new System.Drawing.Size(22, 13);
            this.lbl_MasculinoTotaldeCatadores.TabIndex = 40;
            this.lbl_MasculinoTotaldeCatadores.Text = "(M)";
            // 
            // lbl_FemininoTotaldeCatadoresNumero
            // 
            this.lbl_FemininoTotaldeCatadoresNumero.AutoSize = true;
            this.lbl_FemininoTotaldeCatadoresNumero.Location = new System.Drawing.Point(149, 316);
            this.lbl_FemininoTotaldeCatadoresNumero.Name = "lbl_FemininoTotaldeCatadoresNumero";
            this.lbl_FemininoTotaldeCatadoresNumero.Size = new System.Drawing.Size(19, 13);
            this.lbl_FemininoTotaldeCatadoresNumero.TabIndex = 41;
            this.lbl_FemininoTotaldeCatadoresNumero.Text = "(F)";
            // 
            // lbl_MasculinoTotaldeCatadoresNumero
            // 
            this.lbl_MasculinoTotaldeCatadoresNumero.AutoSize = true;
            this.lbl_MasculinoTotaldeCatadoresNumero.Location = new System.Drawing.Point(217, 316);
            this.lbl_MasculinoTotaldeCatadoresNumero.Name = "lbl_MasculinoTotaldeCatadoresNumero";
            this.lbl_MasculinoTotaldeCatadoresNumero.Size = new System.Drawing.Size(19, 13);
            this.lbl_MasculinoTotaldeCatadoresNumero.TabIndex = 42;
            this.lbl_MasculinoTotaldeCatadoresNumero.Text = "(F)";
            // 
            // rdb_MostrarTodos
            // 
            this.rdb_MostrarTodos.AutoSize = true;
            this.rdb_MostrarTodos.Location = new System.Drawing.Point(0, 0);
            this.rdb_MostrarTodos.Name = "rdb_MostrarTodos";
            this.rdb_MostrarTodos.Size = new System.Drawing.Size(98, 17);
            this.rdb_MostrarTodos.TabIndex = 43;
            this.rdb_MostrarTodos.TabStop = true;
            this.rdb_MostrarTodos.Text = "por Associação";
            this.rdb_MostrarTodos.UseVisualStyleBackColor = true;
            this.rdb_MostrarTodos.CheckedChanged += new System.EventHandler(this.rdb_porAssociacao_CheckedChanged);
            // 
            // btn_PesquisarporAssociacaoeMatricula
            // 
            this.btn_PesquisarporAssociacaoeMatricula.Location = new System.Drawing.Point(370, 140);
            this.btn_PesquisarporAssociacaoeMatricula.Name = "btn_PesquisarporAssociacaoeMatricula";
            this.btn_PesquisarporAssociacaoeMatricula.Size = new System.Drawing.Size(75, 23);
            this.btn_PesquisarporAssociacaoeMatricula.TabIndex = 44;
            this.btn_PesquisarporAssociacaoeMatricula.Text = "Pesquisar";
            this.btn_PesquisarporAssociacaoeMatricula.UseVisualStyleBackColor = true;
            this.btn_PesquisarporAssociacaoeMatricula.Visible = false;
            this.btn_PesquisarporAssociacaoeMatricula.Click += new System.EventHandler(this.btn_MostrarTodos_Click);
            // 
            // cbb_AssociacaoCatador
            // 
            this.cbb_AssociacaoCatador.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cbb_AssociacaoCatador.FormattingEnabled = true;
            this.cbb_AssociacaoCatador.Location = new System.Drawing.Point(18, 50);
            this.cbb_AssociacaoCatador.Name = "cbb_AssociacaoCatador";
            this.cbb_AssociacaoCatador.Size = new System.Drawing.Size(319, 21);
            this.cbb_AssociacaoCatador.TabIndex = 45;
            this.cbb_AssociacaoCatador.Visible = false;
            this.cbb_AssociacaoCatador.SelectedIndexChanged += new System.EventHandler(this.cbb_AssociacaoCatador_SelectedIndexChanged);
            this.cbb_AssociacaoCatador.MouseEnter += new System.EventHandler(this.cbb_AssociacaoCatador_MouseEnter);
            // 
            // lbl_Associacao
            // 
            this.lbl_Associacao.AutoSize = true;
            this.lbl_Associacao.Location = new System.Drawing.Point(12, 9);
            this.lbl_Associacao.Name = "lbl_Associacao";
            this.lbl_Associacao.Size = new System.Drawing.Size(62, 13);
            this.lbl_Associacao.TabIndex = 46;
            this.lbl_Associacao.Text = "Associação";
            this.lbl_Associacao.Visible = false;
            // 
            // panel1
            // 
            this.panel1.Controls.Add(this.rdb_PorAssociadoColetasGestao);
            this.panel1.Controls.Add(this.rdb_porData_ColetasGestao);
            this.panel1.Controls.Add(this.panel2);
            this.panel1.Location = new System.Drawing.Point(367, 50);
            this.panel1.Name = "panel1";
            this.panel1.Size = new System.Drawing.Size(200, 66);
            this.panel1.TabIndex = 47;
            // 
            // panel2
            // 
            this.panel2.Controls.Add(this.rdb_MostrarTodos);
            this.panel2.Location = new System.Drawing.Point(3, 40);
            this.panel2.Name = "panel2";
            this.panel2.Size = new System.Drawing.Size(99, 26);
            this.panel2.TabIndex = 48;
            // 
            // btn_PorAssociacaoCatador
            // 
            this.btn_PorAssociacaoCatador.Location = new System.Drawing.Point(370, 140);
            this.btn_PorAssociacaoCatador.Name = "btn_PorAssociacaoCatador";
            this.btn_PorAssociacaoCatador.Size = new System.Drawing.Size(75, 23);
            this.btn_PorAssociacaoCatador.TabIndex = 49;
            this.btn_PorAssociacaoCatador.Text = "Pesquisar";
            this.btn_PorAssociacaoCatador.UseVisualStyleBackColor = true;
            this.btn_PorAssociacaoCatador.Visible = false;
            this.btn_PorAssociacaoCatador.Click += new System.EventHandler(this.btn_PorAssociacaoCatador_Click);
            // 
            // btn_Funcoes
            // 
            this.btn_Funcoes.Location = new System.Drawing.Point(370, 227);
            this.btn_Funcoes.Name = "btn_Funcoes";
            this.btn_Funcoes.Size = new System.Drawing.Size(75, 23);
            this.btn_Funcoes.TabIndex = 51;
            this.btn_Funcoes.Text = "Funções";
            this.btn_Funcoes.UseVisualStyleBackColor = true;
            this.btn_Funcoes.Click += new System.EventHandler(this.btn_Funcoes_Click);
            // 
            // lbl_Unidade
            // 
            this.lbl_Unidade.AutoSize = true;
            this.lbl_Unidade.Location = new System.Drawing.Point(21, 316);
            this.lbl_Unidade.Name = "lbl_Unidade";
            this.lbl_Unidade.Size = new System.Drawing.Size(47, 13);
            this.lbl_Unidade.TabIndex = 52;
            this.lbl_Unidade.Text = "Unidade";
            this.lbl_Unidade.Visible = false;
            // 
            // chb_ApenasCatador
            // 
            this.chb_ApenasCatador.AutoSize = true;
            this.chb_ApenasCatador.Location = new System.Drawing.Point(367, 117);
            this.chb_ApenasCatador.Name = "chb_ApenasCatador";
            this.chb_ApenasCatador.Size = new System.Drawing.Size(111, 17);
            this.chb_ApenasCatador.TabIndex = 53;
            this.chb_ApenasCatador.Text = "apenas catadores";
            this.chb_ApenasCatador.UseVisualStyleBackColor = true;
            this.chb_ApenasCatador.Visible = false;
            this.chb_ApenasCatador.CheckedChanged += new System.EventHandler(this.chb_ApenasCatador_CheckedChanged);
            // 
            // lbl_NomedoServidor
            // 
            this.lbl_NomedoServidor.AutoSize = true;
            this.lbl_NomedoServidor.Location = new System.Drawing.Point(410, 34);
            this.lbl_NomedoServidor.Name = "lbl_NomedoServidor";
            this.lbl_NomedoServidor.Size = new System.Drawing.Size(86, 13);
            this.lbl_NomedoServidor.TabIndex = 55;
            this.lbl_NomedoServidor.Text = "NomedoServidor";
            this.lbl_NomedoServidor.Visible = false;
            // 
            // cATADORESTableAdapter
            // 
            this.cATADORESTableAdapter.ClearBeforeFill = true;
            // 
            // chb_AuxilioCatador
            // 
            this.chb_AuxilioCatador.AutoSize = true;
            this.chb_AuxilioCatador.Location = new System.Drawing.Point(15, 284);
            this.chb_AuxilioCatador.Name = "chb_AuxilioCatador";
            this.chb_AuxilioCatador.Size = new System.Drawing.Size(98, 17);
            this.chb_AuxilioCatador.TabIndex = 56;
            this.chb_AuxilioCatador.Text = "Auxílio Catador";
            this.chb_AuxilioCatador.UseVisualStyleBackColor = true;
            this.chb_AuxilioCatador.Visible = false;
            // 
            // btn_AuxilioCatador
            // 
            this.btn_AuxilioCatador.Location = new System.Drawing.Point(370, 140);
            this.btn_AuxilioCatador.Name = "btn_AuxilioCatador";
            this.btn_AuxilioCatador.Size = new System.Drawing.Size(75, 23);
            this.btn_AuxilioCatador.TabIndex = 57;
            this.btn_AuxilioCatador.Text = "Pesquisar";
            this.btn_AuxilioCatador.UseVisualStyleBackColor = true;
            this.btn_AuxilioCatador.Visible = false;
            this.btn_AuxilioCatador.Click += new System.EventHandler(this.btn_AuxilioCatador_Click);
            // 
            // CatadorGestao
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.ClientSize = new System.Drawing.Size(484, 351);
            this.Controls.Add(this.btn_AuxilioCatador);
            this.Controls.Add(this.chb_AuxilioCatador);
            this.Controls.Add(this.lbl_NomedoServidor);
            this.Controls.Add(this.chb_ApenasCatador);
            this.Controls.Add(this.lbl_Unidade);
            this.Controls.Add(this.btn_Funcoes);
            this.Controls.Add(this.btn_PorAssociacaoCatador);
            this.Controls.Add(this.panel1);
            this.Controls.Add(this.btn_PesquisarAssociadoeMatriculaCatadorGestao);
            this.Controls.Add(this.lbl_Associacao);
            this.Controls.Add(this.cbb_AssociacaoCatador);
            this.Controls.Add(this.btn_PesquisarporAssociacaoeMatricula);
            this.Controls.Add(this.lbl_MasculinoTotaldeCatadoresNumero);
            this.Controls.Add(this.lbl_FemininoTotaldeCatadoresNumero);
            this.Controls.Add(this.lbl_MasculinoTotaldeCatadores);
            this.Controls.Add(this.lbl_FemininoTotaldeCatadores);
            this.Controls.Add(this.lbl_TotaldeCatadoresNumero);
            this.Controls.Add(this.lbl_TotaldeCatadores);
            this.Controls.Add(this.btn_PesquisarApenasCatador);
            this.Controls.Add(this.btn_MostrarFilhosCatadorGestao);
            this.Controls.Add(this.btn_ImprimirColetasGestao);
            this.Controls.Add(this.button4);
            this.Controls.Add(this.btn_CancelarEditarColetasGestao);
            this.Controls.Add(this.btn_ExcluirEditarColetasGestao);
            this.Controls.Add(this.btn_EditarCatadorGestao);
            this.Controls.Add(this.btn_PesquisarporMatriculaCatadorGestao);
            this.Controls.Add(this.btn_PesquisarPorCatadorCatadorGestao);
            this.Controls.Add(this.lbl_CatadorColetasGestao);
            this.Controls.Add(this.cbb_AssociadoCatadorGestao);
            this.Controls.Add(this.lbl_DatadeNascimentoCatadorGestao);
            this.Controls.Add(this.txt_MatriculaGestaoCatador);
            this.Controls.Add(this.dgv_CatadorGestao);
            this.Icon = ((System.Drawing.Icon)(resources.GetObject("$this.Icon")));
            this.MaximizeBox = false;
            this.MaximumSize = new System.Drawing.Size(500, 390);
            this.MinimizeBox = false;
            this.MinimumSize = new System.Drawing.Size(500, 390);
            this.Name = "CatadorGestao";
            this.Text = "Gestão de Associados";
            this.Load += new System.EventHandler(this.CatadorGestao_Load);
            this.MouseEnter += new System.EventHandler(this.CatadorGestao_MouseEnter);
            ((System.ComponentModel.ISupportInitialize)(this.dgv_CatadorGestao)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.cATADORESBindingSource)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.sGRRC1DataSet5ESSEAQUI)).EndInit();
            this.panel1.ResumeLayout(false);
            this.panel1.PerformLayout();
            this.panel2.ResumeLayout(false);
            this.panel2.PerformLayout();
            this.ResumeLayout(false);
            this.PerformLayout();

        }

        #endregion
        private System.Windows.Forms.Label lbl_CatadorColetasGestao;
        private System.Windows.Forms.Button btn_PesquisarAssociadoeMatriculaCatadorGestao;
        public System.Windows.Forms.DataGridView dgv_CatadorGestao;
        private System.Windows.Forms.Button btn_ImprimirColetasGestao;
        private System.Windows.Forms.Button button4;
        private System.Windows.Forms.Button btn_CancelarEditarColetasGestao;
        private System.Windows.Forms.Button btn_ExcluirEditarColetasGestao;
        private System.Windows.Forms.Button btn_EditarCatadorGestao;
        private System.Windows.Forms.TextBox txt_MatriculaGestaoCatador;
        private System.Windows.Forms.Label lbl_DatadeNascimentoCatadorGestao;
        private System.Windows.Forms.Button btn_PesquisarPorCatadorCatadorGestao;
        private System.Windows.Forms.Button btn_PesquisarporMatriculaCatadorGestao;
        private System.Windows.Forms.RadioButton rdb_PorAssociadoColetasGestao;
        private System.Windows.Forms.RadioButton rdb_porData_ColetasGestao;
        private System.Windows.Forms.Button btn_MostrarFilhosCatadorGestao;
        private System.Windows.Forms.Button btn_PesquisarApenasCatador;
        private System.Windows.Forms.Label lbl_TotaldeCatadores;
        public System.Windows.Forms.Label lbl_TotaldeCatadoresNumero;
        private System.Windows.Forms.Label lbl_FemininoTotaldeCatadores;
        private System.Windows.Forms.Label lbl_MasculinoTotaldeCatadores;
        private System.Windows.Forms.Label lbl_FemininoTotaldeCatadoresNumero;
        private System.Windows.Forms.Label lbl_MasculinoTotaldeCatadoresNumero;
        private System.Windows.Forms.RadioButton rdb_MostrarTodos;
        private System.Windows.Forms.Button btn_PesquisarporAssociacaoeMatricula;
        public System.Windows.Forms.ComboBox cbb_AssociadoCatadorGestao;
        public System.Windows.Forms.ComboBox cbb_AssociacaoCatador;
        private System.Windows.Forms.Label lbl_Associacao;
        private System.Windows.Forms.Panel panel1;
        private System.Windows.Forms.Panel panel2;
        private System.Windows.Forms.Button btn_PorAssociacaoCatador;
        private System.Windows.Forms.Button btn_Funcoes;
        public System.Windows.Forms.Label lbl_Unidade;
        private System.Windows.Forms.CheckBox chb_ApenasCatador;
        public System.Windows.Forms.Label lbl_NomedoServidor;
        private SGRRC1DataSet5ESSEAQUI sGRRC1DataSet5ESSEAQUI;
        private System.Windows.Forms.BindingSource cATADORESBindingSource;
        private SGRRC1DataSet5ESSEAQUITableAdapters.CATADORESTableAdapter cATADORESTableAdapter;
        private System.Windows.Forms.CheckBox chb_AuxilioCatador;
        private System.Windows.Forms.Button btn_AuxilioCatador;
        private System.Windows.Forms.DataGridViewTextBoxColumn iDCatadorDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn catadorDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn dataDeNascimentoDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn dataDeMatrículaDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn gêneroDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn telefoneDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn rGDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn cPFDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn nISDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn cidadeDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn bairroDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn ruaDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn cEPDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn auxilioCatadorDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn administradorDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn unidadeDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn usuarioEditadoCatadorDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn dataEditadoCatadorDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn funcaoDataGridViewTextBoxColumn;
        private System.Windows.Forms.DataGridViewTextBoxColumn matrículaDataGridViewTextBoxColumn;
    }
}

using iTextSharp.text.pdf;
using iTextSharp.text;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.ComTypes;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlTypes;
using Org.BouncyCastle.Utilities;
using System.Data.SqlClient;
using static System.Net.Mime.MediaTypeNames;
using System.Diagnostics;
using System.Xml.Linq;

namespace Sistema_de_Gerenciamento_da_Rede_de_Catadores_do_Ceará__Versão_Teste_
{
    public partial class AssociadoGestao : Form
    {
        public AssociadoGestao()
        {
            InitializeComponent();
        }

        //Somente números e '/' são aceitos.
        private void txt_DigitedaColetaCatadorGestao_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((!char.IsNumber(e.KeyChar)) && !char.IsControl(e.KeyChar) && e.KeyChar != '/')
            {
                e.Handled = true;
            }
        }

        //Eventos de radio button por associado.
        private void rdb_PorAssociadoColetasGestao_CheckedChanged(object sender, EventArgs e)
        {
            chb_AuxilioCatador.Visible = false;
            chb_ApenasCatador.Visible = false;
            lbl_CatadorColetasGestao.Visible = true;
            cbb_AssociadoCatadorGestao.Visible = true;
            btn_AuxilioCatador.Visible = false;
            rdb_MostrarTodos.Checked = false;
            btn_PesquisarPorCatadorCatadorGestao.Visible = true;
            btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible = false;
            btn_PesquisarporMatriculaCatadorGestao.Visible = false;
            btn_PesquisarporAssociacaoeMatricula.Visible = false;
            txt_MatriculaGestaoCatador.ReadOnly = true;
            txt_MatriculaGestaoCatador.BackColor = Color.LightGray;
            cbb_AssociadoCatadorGestao.Enabled = true;
            btn_PorAssociacaoCatador.Visible = false;
            btn_PesquisarporAssociacaoeMatricula.Visible = false;
            cbb_AssociacaoCatador.Visible = false;
            cbb_AssociacaoCatador.Enabled = false;
            lbl_Associacao.Visible = false;
            btn_PesquisarApenasCatador.Visible = false;
        }

        //Eventos do radio button por Matrícula.
        private void rdb_porMatriculaCatadorGestao_CheckedChanged(object sender, EventArgs e)
        {
            chb_AuxilioCatador.Visible = false;
            txt_MatriculaGestaoCatador.ReadOnly = false;
            txt_MatriculaGestaoCatador.BackColor = Color.White;
            btn_AuxilioCatador.Visible = false;
            btn_PesquisarporMatriculaCatadorGestao.Visible = true;
            btn_PesquisarPorCatadorCatadorGestao.Visible = false;
            btn_PesquisarporAssociacaoeMatricula.Visible = false;
            btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible = false;
            txt_MatriculaGestaoCatador.BackColor = Color.White;
            btn_PesquisarApenasCatador.Visible = false;
            cbb_AssociadoCatadorGestao.Enabled = false;
            chb_ApenasCatador.Visible = false;
            if (rdb_MostrarTodos.Checked == true)
            {
                chb_ApenasCatador.Visible = false;
                btn_PesquisarporAssociacaoeMatricula.Visible = true;
                btn_PesquisarporMatriculaCatadorGestao.Visible = false;
                btn_PesquisarPorCatadorCatadorGestao.Visible = false;
                btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible = false;
                btn_PorAssociacaoCatador.Visible = false;
                btn_PesquisarApenasCatador.Visible = false;

            }
        }

        //Eventos de busca por Associado e Matrícula
        private void btn_PesquisarCatadoreDataCatadorGestao_Click(object sender, EventArgs e)
        {

            if (cbb_AssociadoCatadorGestao.SelectedIndex == -1 || txt_MatriculaGestaoCatador.Text == "")
            {
                MessageBox.Show("Escolha um associado da lista e digite um número de matrícula.");
                return;

            }
            else
            {
                string NomedoServidor = lbl_NomedoServidor.Text;
                string DatadeNascimento = txt_MatriculaGestaoCatador.Text;
                string Catador = cbb_AssociadoCatadorGestao.Text;
                string vqueryColetas = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula]  FROM [CATADORES] WHERE [Catador] ='" + Catador + "' AND [Matrícula] ='" + DatadeNascimento + "'ORDER BY Catador ASC ;";
                dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryColetas, NomedoServidor);
            }
        }

        //Eventos de busca por Associado
        private void btn_PesquisarPorCatadorCatadorGestao_Click(object sender, EventArgs e)
        {
            if (cbb_AssociadoCatadorGestao.SelectedIndex == -1)
            {  
                MessageBox.Show("Escolha um associado da lista.");
                return;
            }
            else
            {
                string NomedoServidor = lbl_NomedoServidor.Text;
                string Catador = cbb_AssociadoCatadorGestao.Text;
                string vqueryCatador = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula]  FROM [CATADORES] WHERE [Catador] = '" + Catador + "' ORDER BY Catador ASC ;";
                dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatador, NomedoServidor);
            }
        }

        //Eventos de busca por Matrícula
        private void btn_PesquisarporDataCatadorGestao_Click(object sender, EventArgs e)
        {

            if (txt_MatriculaGestaoCatador.Text == "")
            {
                MessageBox.Show("Digite um número de matrícula.");
                return;

            }

            else
            { string Matricula = txt_MatriculaGestaoCatador.Text;
                string NomedoServidor = lbl_NomedoServidor.Text;
                string vqueryCatador = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula]  FROM [CATADORES] WHERE [Matrícula] = '" + Matricula + "' ORDER BY Catador ASC";
                dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatador, NomedoServidor);
            }
        }

        //Carregar formulário de edição e transferência de valores.
        private void btn_EditarCatadorGestao_Click(object sender, EventArgs e)
        {

            if (dgv_CatadorGestao.Rows.Count == 0)
            {
                MessageBox.Show("Catador não selecionado.");
                return;

            }
            else
            {
                btn_EditarCatadorGestao.Enabled = false;
                Criptografia cryptography = new Criptografia(System.Configuration.ConfigurationManager.AppSettings[""]);
                string DataDecrip = cryptography.Decriptar(this.dgv_CatadorGestao.CurrentRow.Cells[2].Value.ToString());
                string DataMatDecrip = cryptography.Decriptar(this.dgv_CatadorGestao.CurrentRow.Cells[3].Value.ToString());
                string GeneroDecrip = cryptography.Decriptar(this.dgv_CatadorGestao.CurrentRow.Cells[4].Value.ToString());
                string TelefoneDecrip = cryptography.Decriptar(this.dgv_CatadorGestao.CurrentRow.Cells[5].Value.ToString());
                string RGDecrip = cryptography.Decriptar(this.dgv_CatadorGestao.CurrentRow.Cells[6].Value.ToString());
                string CPFDecrip = cryptography.Decriptar(this.dgv_CatadorGestao.CurrentRow.Cells[7].Value.ToString());
                string NISDecrip = cryptography.Decriptar(this.dgv_CatadorGestao.CurrentRow.Cells[8].Value.ToString());
                string CidadeDecrip = this.dgv_CatadorGestao.CurrentRow.Cells[9].Value.ToString();
                string BairroDecrip = cryptography.Decriptar(this.dgv_CatadorGestao.CurrentRow.Cells[10].Value.ToString());
                string RuaDecrip = cryptography.Decriptar(this.dgv_CatadorGestao.CurrentRow.Cells[11].Value.ToString());
                string CEPDecrip = cryptography.Decriptar(this.dgv_CatadorGestao.CurrentRow.Cells[12].Value.ToString());
                string RecebeDecrip = this.dgv_CatadorGestao.CurrentRow.Cells[13].Value.ToString();
                string AdministradorDecrip = cryptography.Decriptar(this.dgv_CatadorGestao.CurrentRow.Cells[14].Value.ToString());
                string FuncaoDecrip = (this.dgv_CatadorGestao.CurrentRow.Cells[18].Value.ToString());
                string MatriculaDecrip = this.dgv_CatadorGestao.CurrentRow.Cells[19].Value.ToString();

                EditarCatador CatadorEditado = new EditarCatador();
                CatadorEditado.txt_MatriculaCatadorCatadorEditar.Text = MatriculaDecrip;
                CatadorEditado.txt_NomeCompletoEditarCatador.Text = this.dgv_CatadorGestao.CurrentRow.Cells[1].Value.ToString();
                CatadorEditado.txt_DatadeNascimentoEditarCatador.Text = DataDecrip;
                CatadorEditado.txt_DatadeMatriculaEditarCatador.Text = DataMatDecrip;
                CatadorEditado.cbb_GeneroEditarCatador.Text = GeneroDecrip;
                CatadorEditado.txt_TelefoneEditarCatador.Text = TelefoneDecrip;
                CatadorEditado.txt_RGEditarCatador.Text = RGDecrip;
                CatadorEditado.txt_CPFEditarCatador.Text = CPFDecrip;
                CatadorEditado.txt_NISEditarCatador.Text = NISDecrip;
                CatadorEditado.lbl_NomedoServidor.Text = lbl_NomedoServidor.Text;
                CatadorEditado.cbb_CidadeEditarCatador.Text = CidadeDecrip;
                CatadorEditado.txt_BairroEditarCatador.Text = BairroDecrip;
                CatadorEditado.txt_RuaEditarCatador.Text = RuaDecrip;
                CatadorEditado.txt_CEPEditarCatador.Text = CEPDecrip;
                CatadorEditado.txt_RecebeAuxilioEditarCadastroCatador.Text = RecebeDecrip;
                CatadorEditado.lbl_Unidade.Text = this.dgv_CatadorGestao.CurrentRow.Cells[15].Value.ToString();
                CatadorEditado.lbl_Usuario.Text = AdministradorDecrip;
                CatadorEditado.txt_Funcao.Text = FuncaoDecrip;
                CatadorEditado.cbb_Funcao.Text = FuncaoDecrip;
                CatadorEditado.lbl_NomedoServidor.Text = lbl_NomedoServidor.Text;

                CatadorEditado.Show();
            }
        }
       
       //Carregamento dos associados e das associações;
       //Consulta da quantidade de associados (geral e por gênero).
        private void CatadorGestao_Load(object sender, EventArgs e)
        {
            string NomedoServidor = lbl_NomedoServidor.Text;
       
            string vqueryCatador = @"SELECT [Catador] FROM CATADORES ORDER BY [Catador] ASC ;";
            cbb_AssociadoCatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatador, NomedoServidor);
            cbb_AssociadoCatadorGestao.DisplayMember = ("Catador");

            SqlConnection Conectar = new SqlConnection("Data Source=DESKTOP-" + NomedoServidor + "\\SQLEXPRESS;Initial Catalog=SGRRC1;Integrated Security=True");
            Conectar.Open();
            SqlCommand cmd = new SqlCommand("Select count(*) from CATADORES", Conectar);
            var contar = cmd.ExecuteScalar();
            lbl_TotaldeCatadoresNumero.Text = contar.ToString();


            Criptografia cryptography = new Criptografia(System.Configuration.ConfigurationManager.AppSettings[""]);
            string FemininoCrip = cryptography.Encriptar("Feminino");
            SqlCommand cmd2 = new SqlCommand("Select count(*) from CATADORES where [Gênero] = '" + FemininoCrip + "'", Conectar);
            var contarF = cmd2.ExecuteScalar();
            lbl_FemininoTotaldeCatadoresNumero.Text = contarF.ToString();


            string MasculinoCrip = cryptography.Encriptar("Masculino");
            SqlCommand cmd3 = new SqlCommand("Select count(*) from CATADORES where [Gênero] = '" + MasculinoCrip + "'", Conectar);
            var contarM = cmd3.ExecuteScalar();
            lbl_MasculinoTotaldeCatadoresNumero.Text = contarM.ToString();
            Conectar.Close();

            string vqueryAssociacao = @"SELECT [Nome Fantasia] FROM ASSOCIACAO ORDER BY [Nome Fantasia] ASC";
            cbb_AssociacaoCatador.DataSource = ConexaoBancodeDados.dql(vqueryAssociacao, NomedoServidor);
            cbb_AssociacaoCatador.DisplayMember = "Nome Fantasia";
            cbb_AssociadoCatadorGestao.DisplayMember = ("Nome Fantasia");

        }

        //Carregamento do formulário de filhos e transferência de valores.
        private void btn_MostrarFilhosCatadorGestao_Click(object sender, EventArgs e)
        {
            if (dgv_CatadorGestao.Rows.Count == 0)
            {
                MessageBox.Show("Catador não selecionado.");
                return;
            }
            else
            {
                string NomedoServidor = lbl_NomedoServidor.Text;
                MostrarFilhos FilhosMostrar = new MostrarFilhos();
                string PaiMae = this.dgv_CatadorGestao.CurrentRow.Cells[1].Value.ToString();
                FilhosMostrar.label1.Text = this.dgv_CatadorGestao.CurrentRow.Cells[1].Value.ToString();

                string vqueryFilhos = @"SELECT [Pai/Mae], [Data de Nascimento], [Gênero], [ID_Filho] FROM FILHOS WHERE [Pai/Mae] ='" + PaiMae + "' ;";
                FilhosMostrar.dgv_MostrarFilhos.DataSource = ConexaoBancodeDados.dql(vqueryFilhos, NomedoServidor);

                string vqueryPaiMae = @"select [Catador] from CATADORES order by Catador ASC";

                FilhosMostrar.cbb_PaiMaeMostrarFilhos.DataSource = ConexaoBancodeDados.dql(vqueryPaiMae, NomedoServidor);
                FilhosMostrar.cbb_PaiMaeMostrarFilhos.DisplayMember = ("Catador");
                FilhosMostrar.cbb_PaiMaeMostrarFilhos.SelectedIndex = cbb_AssociadoCatadorGestao.SelectedIndex;
                FilhosMostrar.lbl_NomedoServidor.Text = lbl_NomedoServidor.Text;
                FilhosMostrar.Show();
            }
        }

        //Exclusão de associado do banco de dados e atualização do Data Grid View.
        private void btn_ExcluirEditarColetasGestao_Click(object sender, EventArgs e)
        {
            if (dgv_CatadorGestao.Rows.Count == 0)
            {
                MessageBox.Show("Catador não selecionado.");
                return;

            }
            else
            {
                var Aviso = MessageBox.Show("Esta ação será irreversível. Deseja continuar?", "Exclusão de catador", MessageBoxButtons.YesNo);

                string NomedoServidor = lbl_NomedoServidor.Text;
                if (Aviso == DialogResult.Yes)
                {

                    
                        string IDdoCatador = this.dgv_CatadorGestao.CurrentRow.Cells[0].Value.ToString();
                        string PaiMae = this.dgv_CatadorGestao.CurrentRow.Cells[1].Value.ToString();

                        Criptografia cryptography = new Criptografia(System.Configuration.ConfigurationManager.AppSettings[""]);
                        string PaiMaeCrip2 = cryptography.Encriptar(PaiMae);


                        string ExclusaoCatador = @"DELETE FROM CATADORES WHERE [ID_Catador] ='" + IDdoCatador + "';";
                        string ExclusaoFilhos = @"DELETE FROM FILHOS WHERE [Pai/Mae]='" + PaiMaeCrip2 + "';";
                        ConexaoBancodeDados.dql(ExclusaoCatador, NomedoServidor);
                        ConexaoBancodeDados.dql(ExclusaoFilhos, NomedoServidor);
                        MessageBox.Show("Catador(a) excluído(a) com sucesso!");
                   
                    if (cbb_AssociacaoCatador.SelectedIndex != -1 && chb_ApenasCatador.Checked == true)
                    {
                        string Associacao = cbb_AssociacaoCatador.Text;
                        string vqueryAssociacao = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula] FROM [CATADORES] WHERE [Unidade] = '" + Associacao + "' AND [Funcao] = 'CATADOR' ORDER BY Catador ASC ;";
                        dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacao, NomedoServidor);

                        lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();


                    }

                    if(btn_AuxilioCatador.Visible == true)
                    {
                   
                        if (cbb_AssociacaoCatador.SelectedIndex != -1 && chb_ApenasCatador.Checked == true)
                        {
                            string Associacao = cbb_AssociacaoCatador.Text;
                            string vqueryAssociacao = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula] FROM [CATADORES] WHERE [Unidade] = '" + Associacao + "' AND [Funcao] = 'CATADOR' AND [AuxilioCatador] = 'Recebe' ORDER BY Catador ASC ;";
                            dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacao, NomedoServidor);



                            lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();


                        }

                    }

                    if (btn_PesquisarporMatriculaCatadorGestao.Visible == true)
                    {

                        if (cbb_AssociadoCatadorGestao.SelectedIndex == -1)
                        {
                            MessageBox.Show("Digite uma matrícula.");
                            return;

                        }
                        else
                        {
                            string Matricula = txt_MatriculaGestaoCatador.Text;
                            string vqueryCatador = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP],[AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula]  FROM [CATADORES] WHERE [Matrícula] ='" + Matricula + "'ORDER BY Catador ASC ;";
                            dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatador, NomedoServidor);

                            string vqueryCatadorcbb = @"SELECT [Catador] FROM CATADORES ORDER BY [Catador] ASC ;";
                            cbb_AssociadoCatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatadorcbb, NomedoServidor);
                            cbb_AssociadoCatadorGestao.DisplayMember = ("Catador");

                            lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();

                        }

                    }


                    if (btn_PesquisarPorCatadorCatadorGestao.Visible == true)
                    {
                        if (cbb_AssociadoCatadorGestao.SelectedIndex == -1)
                        {
                            MessageBox.Show("Escolha um catador da lista.");
                            return;

                        }
                        else
                        {
                            string Catador = cbb_AssociadoCatadorGestao.Text;
                            string vqueryCatador = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP],[AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula]  FROM [CATADORES] WHERE [Catador] ='" + Catador + "'ORDER BY Catador ASC ;";
                            dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatador, NomedoServidor);

                            string vqueryCatadorcbb = @"SELECT [Catador] FROM CATADORES where [Unidade] = '"+lbl_Unidade.Text+"' ORDER BY [Catador] ASC ;";
                            cbb_AssociadoCatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatadorcbb, NomedoServidor);
                            cbb_AssociadoCatadorGestao.DisplayMember = ("Catador");

                            lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();

                        }

                    }


                    if (btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible == true)
                    {

                        if (txt_MatriculaGestaoCatador.Text == "")
                        {
                            MessageBox.Show("Digite um número de matrícula.");
                            return;

                        }

                        else
                        {
                            string Matricula = txt_MatriculaGestaoCatador.Text;

                            string vqueryCatador = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula]  FROM [CATADORES] WHERE [Matrícula] = '" + Matricula + "' ORDER BY Catador ASC";
                            dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatador, NomedoServidor);

                            string vqueryCatadorcbb = @"SELECT [Catador] FROM CATADORES ORDER BY [Catador] ASC ;";
                            cbb_AssociadoCatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatadorcbb, NomedoServidor);
                            cbb_AssociadoCatadorGestao.DisplayMember = ("Catador");

                            lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();

                        }

                    }


                    if (btn_PorAssociacaoCatador.Visible == true)
                    {
                        string Associacao = cbb_AssociacaoCatador.Text;
                        string vqueryAssociacao = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula] FROM [CATADORES] WHERE [Unidade] = '" + Associacao + "' ORDER BY Catador ASC ;";
                        dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacao, NomedoServidor);

                        lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();

                        string vqueryCatador = @"SELECT [Catador] FROM CATADORES ORDER BY [Catador] ASC ;";
                        cbb_AssociadoCatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatador, NomedoServidor);
                        cbb_AssociadoCatadorGestao.DisplayMember = ("Catador");

                    }

                    if (btn_PesquisarporAssociacaoeMatricula.Visible == true)
                    {

                        if (txt_MatriculaGestaoCatador.Text != "")
                        {
                            string Associacao = cbb_AssociacaoCatador.Text;
                            string Matricula = txt_MatriculaGestaoCatador.Text;
                            string vqueryAssociacaoeMatricula = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula]  FROM [CATADORES] WHERE [Unidade] = '" + Associacao + "' AND [Matrícula] = '" + Matricula + "' ORDER BY Catador ASC ;";
                            dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacaoeMatricula, NomedoServidor);


                            lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();

                            string vqueryCatador = @"SELECT [Catador] FROM CATADORES ORDER BY [Catador] ASC ;";
                            cbb_AssociadoCatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatador, NomedoServidor);
                            cbb_AssociadoCatadorGestao.DisplayMember = ("Catador");
                        }
                        else
                        {
                            MessageBox.Show("Digite um valor de matrícula.");
                            return;


                        }

                    }



                    if (btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible == true)
                    {

                        if (cbb_AssociadoCatadorGestao.SelectedIndex == -1 || txt_MatriculaGestaoCatador.Text == "")
                        {
                            MessageBox.Show("Escolha um catador da lista e digite um número de matrícula.");
                            return;

                        }
                        else
                        {

                            string DatadeNascimento = txt_MatriculaGestaoCatador.Text;
                            string Catador = cbb_AssociadoCatadorGestao.Text;
                            string vqueryColetas = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula]  FROM [CATADORES] WHERE [Catador] ='" + Catador + "' AND [Matrícula] ='" + DatadeNascimento + "'ORDER BY Catador ASC ;";
                            dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryColetas, NomedoServidor);

                            string vqueryCatador = @"SELECT [Catador] FROM CATADORES ORDER BY [Catador] ASC ;";
                            cbb_AssociadoCatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatador, NomedoServidor);
                            cbb_AssociadoCatadorGestao.DisplayMember = ("Catador");

                            lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();


                        }
                    }
                }
                else
                {
                    return;
                }
            }
        }

        //Geração de relatórios em .pdf utilizando o ITextSharp
        private void btn_ImprimirColetasGestao_Click(object sender, EventArgs e)
        {
            try
            {
                string NomedoServidor = lbl_NomedoServidor.Text;

                if (btn_PorAssociacaoCatador.Visible == true)
                {
                    if (rdb_MostrarTodos.Checked == true && dgv_CatadorGestao.Rows.Count != 0)
                    {
                        string nomeassociacao = cbb_AssociacaoCatador.Text;
                        string data = DateTime.Now.ToLongDateString();
                        string dataout = string.Concat(data.Where(Char.IsDigit));
                        string nomeArquivo = Globais.caminhoImpressao + @"\INFORMACOES_DOS_ASSOCIADOS_DA " + nomeassociacao + "" + dataout + ".pdf";
                        FileStream arquivoPDF = new FileStream(nomeArquivo, FileMode.Create);

                        Document doc = new Document(PageSize.A4.Rotate(), 30f, 0f, 150f, 150f);
                        doc.SetPageSize(doc.PageSize);
                        PdfWriter escritorPDF = PdfWriter.GetInstance(doc, arquivoPDF);
                        escritorPDF.PageEvent = new ImprimirInfoClassecs();
                        escritorPDF.PageEvent = new InformacoesAssociacaoCatadorImprimir(NomedoServidor, nomeassociacao);

                        iTextSharp.text.Image Logotipo = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\RededeCatadoresdoCeará.png");
                        Logotipo.ScaleToFit(140f, 120f);
                        Logotipo.SetAbsolutePosition(77f, 478f);

                        doc.Open();
                        string dados = "";

                        PdfPTable Cabeçalho = new PdfPTable(1);
                        Cabeçalho.TotalWidth = doc.PageSize.Width - doc.LeftMargin - doc.RightMargin;
                        Cabeçalho.DefaultCell.Border = 0;
                        Cabeçalho.AddCell(new Paragraph());

                        PdfPCell Celula = new PdfPCell((new Paragraph("Rede dos Catadores de Resíduos Sólidos Recicláveis do Estado do Ceará")));
                        Celula.HorizontalAlignment = Element.ALIGN_CENTER;
                        Celula.Border = 0;
                        Cabeçalho.AddCell(Celula);
                        Cabeçalho.AddCell(new Paragraph());
                        Cabeçalho.WriteSelectedRows(0, -1, doc.LeftMargin, escritorPDF.PageSize.GetTop(doc.TopMargin) + 120, escritorPDF.DirectContent);


                        PdfPTable TextoRelatorioColetasDia = new PdfPTable(1);
                        TextoRelatorioColetasDia.TotalWidth = doc.PageSize.Width - doc.LeftMargin - doc.RightMargin;
                        TextoRelatorioColetasDia.SpacingBefore = 50;
                        TextoRelatorioColetasDia.DefaultCell.Border = 0;
                        TextoRelatorioColetasDia.AddCell(new Paragraph());

                        PdfPCell CelulaRelatorioColetaDia = new PdfPCell((new Paragraph("Informações dos associados da")));
                        CelulaRelatorioColetaDia.HorizontalAlignment = Element.ALIGN_CENTER;
                        CelulaRelatorioColetaDia.Border = 0;
                        TextoRelatorioColetasDia.AddCell(CelulaRelatorioColetaDia);
                        TextoRelatorioColetasDia.AddCell(new Paragraph());
                        TextoRelatorioColetasDia.WriteSelectedRows(0, -1, doc.LeftMargin, escritorPDF.PageSize.GetTop(doc.TopMargin) + 100, escritorPDF.DirectContent);


                        PdfPTable TextoNomeAssociacao = new PdfPTable(1);
                        TextoNomeAssociacao.TotalWidth = doc.PageSize.Width - doc.LeftMargin - doc.RightMargin;
                        TextoNomeAssociacao.SpacingBefore = 50;
                        TextoNomeAssociacao.DefaultCell.Border = 0;
                        TextoNomeAssociacao.AddCell(new Paragraph());

                        PdfPCell CelulaNomeAssociacao = new PdfPCell((new Paragraph(lbl_Unidade.Text)));
                        CelulaNomeAssociacao.HorizontalAlignment = Element.ALIGN_CENTER;
                        CelulaNomeAssociacao.Border = 0;
                        TextoNomeAssociacao.AddCell(CelulaNomeAssociacao);
                        TextoNomeAssociacao.AddCell(new Paragraph());
                        TextoNomeAssociacao.WriteSelectedRows(0, -1, doc.LeftMargin, escritorPDF.PageSize.GetTop(doc.TopMargin) + 81, escritorPDF.DirectContent);



                        try
                        {
                            SqlConnection Conectar = new SqlConnection("Data Source=DESKTOP-" + NomedoServidor + "\\SQLEXPRESS;Initial Catalog=SGRRC1;Integrated Security=True");
                            Conectar.Open();
                            SqlCommand cmd2 = new SqlCommand("select [EnderecoImagem] from [ASSOCIACAO] WHERE [Nome Fantasia] = '" + lbl_Unidade.Text + "'", Conectar);
                            var EnderecoImagem = cmd2.ExecuteScalar();
                            string Endereco = EnderecoImagem.ToString();

                            iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Endereco);
                            LogotipoAssociacao.ScaleToFit(140f, 120f);
                            LogotipoAssociacao.SetAbsolutePosition(650f, 475);
                            doc.Add(LogotipoAssociacao);
                            Conectar.Close();
                        }
                        catch
                        {

                            iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\BRANCO.png");
                            LogotipoAssociacao.ScaleToFit(140f, 120f);
                            LogotipoAssociacao.SetAbsolutePosition(650f, 475);
                            doc.Add(LogotipoAssociacao);
                        }

                        PdfPTable tabela1 = new PdfPTable(5);
                        tabela1.SpacingBefore = 50;
                        tabela1.WidthPercentage = 80;
                        tabela1.AddCell("Associado");
                        tabela1.AddCell("Matrícula");
                        tabela1.AddCell("Função");
                        tabela1.AddCell("Auxílio Catador");
                        tabela1.AddCell("Associação");

                        string vqueryCatadorImpressao = @"SELECT [Catador], [Matrícula], [Funcao],  [AuxilioCatador], [Unidade] FROM CATADORES WHERE [Unidade] ='" + nomeassociacao + "'ORDER BY Catador ASC ;";
                        DataTable dtCatadorImpressao = ConexaoBancodeDados.dql(vqueryCatadorImpressao, NomedoServidor);
                        for (int i = 0; i < dtCatadorImpressao.Rows.Count; i++)
                        {
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Catador"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Matrícula"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Funcao"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("AuxilioCatador"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Unidade"));
                        }

                        doc.Add(Logotipo);
                        doc.Add(tabela1);
                        doc.Close();

                        System.Diagnostics.Process.Start(Globais.caminhoImpressao + @"\INFORMACOES_DOS_ASSOCIADOS_DA " + nomeassociacao + "" + dataout + ".pdf");

                    }


                }

                if (btn_AuxilioCatador.Visible == true)
                {

                    if (dgv_CatadorGestao.Rows.Count == 0)
                    {
                        MessageBox.Show("Associado não selecionado.");
                        return;

                    }


                    else
                    {
                        string nomecatador = cbb_AssociacaoCatador.Text;
                        string data = DateTime.Now.ToLongDateString();
                        string dataout = string.Concat(data.Where(Char.IsDigit));
                        string servnome = NomedoServidor;
                        string nomeassociacao = lbl_Unidade.Text;
                        string nomeArquivo = Globais.caminhoImpressao + @"\INFORMACOES" + nomecatador + "RECEBE_AUXCAT" + data + " .pdf";
                        FileStream arquivoPDF = new FileStream(nomeArquivo, FileMode.Create);
                        Document doc = new Document(PageSize.A4.Rotate(), 30f, 0f, 150f, 150f);
                        doc.SetPageSize(doc.PageSize);
                        PdfWriter escritorPDF = PdfWriter.GetInstance(doc, arquivoPDF);
                        escritorPDF.PageEvent = new ImprimirInfoClassecs();
                        escritorPDF.PageEvent = new InformacoesCatadorAuxilioImprimir(servnome, nomeassociacao);
                        iTextSharp.text.Image Logotipo = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\RededeCatadoresdoCeará.png");

                        Logotipo.ScaleToFit(140f, 120f);
                        Logotipo.SetAbsolutePosition(77f, 478f);

                        doc.Open();
                        string dados = "";


                        PdfPTable Cabeçalho = new PdfPTable(1);
                        Cabeçalho.TotalWidth = doc.PageSize.Width - doc.LeftMargin - doc.RightMargin;
                        Cabeçalho.DefaultCell.Border = 0;
                        Cabeçalho.AddCell(new Paragraph());

                        PdfPCell Celula = new PdfPCell((new Paragraph("Rede dos Catadores de Resíduos Sólidos Recicláveis do Estado do Ceará")));
                        Celula.HorizontalAlignment = Element.ALIGN_CENTER;
                        Celula.Border = 0;
                        Cabeçalho.AddCell(Celula);
                        Cabeçalho.AddCell(new Paragraph());
                        Cabeçalho.WriteSelectedRows(0, -1, doc.LeftMargin, escritorPDF.PageSize.GetTop(doc.TopMargin) + 120, escritorPDF.DirectContent);

                        try
                        {
                            SqlConnection Conectar = new SqlConnection("Data Source=DESKTOP-" + NomedoServidor + "\\SQLEXPRESS;Initial Catalog=SGRRC1;Integrated Security=True");
                            Conectar.Open();
                            SqlCommand cmd2 = new SqlCommand("select [EnderecoImagem] from [ASSOCIACAO] WHERE [Nome Fantasia] = '" + lbl_Unidade.Text + "'", Conectar);
                            var EnderecoImagem = cmd2.ExecuteScalar();
                            string Endereco = EnderecoImagem.ToString();

                            iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Endereco);
                            LogotipoAssociacao.ScaleToFit(140f, 120f);
                            LogotipoAssociacao.SetAbsolutePosition(650f, 475);
                            doc.Add(LogotipoAssociacao);
                            Conectar.Close();
                        }
                        catch
                        {

                            iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\BRANCO.png");
                            LogotipoAssociacao.ScaleToFit(140f, 120f);
                            LogotipoAssociacao.SetAbsolutePosition(650f, 475);
                            doc.Add(LogotipoAssociacao);
                        }

                        PdfPTable TextoRelatorioColetasDia = new PdfPTable(1);
                        TextoRelatorioColetasDia.TotalWidth = doc.PageSize.Width - doc.LeftMargin - doc.RightMargin;
                        TextoRelatorioColetasDia.SpacingBefore = 50;
                        TextoRelatorioColetasDia.DefaultCell.Border = 0;
                        TextoRelatorioColetasDia.AddCell(new Paragraph());

                        PdfPCell CelulaRelatorioColetaDia = new PdfPCell((new Paragraph("Informações dos catadores que recebem Auxílio Catador da")));
                        CelulaRelatorioColetaDia.HorizontalAlignment = Element.ALIGN_CENTER;
                        CelulaRelatorioColetaDia.Border = 0;
                        TextoRelatorioColetasDia.AddCell(CelulaRelatorioColetaDia);
                        TextoRelatorioColetasDia.AddCell(new Paragraph());
                        TextoRelatorioColetasDia.WriteSelectedRows(0, -1, doc.LeftMargin, escritorPDF.PageSize.GetTop(doc.TopMargin) + 100, escritorPDF.DirectContent);

                        PdfPTable TextoNomeAssociacao = new PdfPTable(1);
                        TextoNomeAssociacao.TotalWidth = doc.PageSize.Width - doc.LeftMargin - doc.RightMargin;
                        TextoNomeAssociacao.SpacingBefore = 50;
                        TextoNomeAssociacao.DefaultCell.Border = 0;
                        TextoNomeAssociacao.AddCell(new Paragraph());

                        PdfPCell CelulaNomeAssociacao = new PdfPCell((new Paragraph(lbl_Unidade.Text)));
                        CelulaNomeAssociacao.HorizontalAlignment = Element.ALIGN_CENTER;
                        CelulaNomeAssociacao.Border = 0;
                        TextoNomeAssociacao.AddCell(CelulaNomeAssociacao);
                        TextoNomeAssociacao.AddCell(new Paragraph());
                        TextoNomeAssociacao.WriteSelectedRows(0, -1, doc.LeftMargin, escritorPDF.PageSize.GetTop(doc.TopMargin) + 81, escritorPDF.DirectContent);


                        PdfPTable tabela1 = new PdfPTable(5);
                        tabela1.HorizontalAlignment = Element.ALIGN_CENTER;
                        tabela1.SpacingBefore = 70;
                        tabela1.WidthPercentage = 80;

                        tabela1.AddCell("Associado");
                        tabela1.AddCell("Matrícula");
                        tabela1.AddCell("Funcao");
                        tabela1.AddCell("Auxilio Catador");
                        tabela1.AddCell("Associação");

                        string vqueryCatadorImpressao = @"SELECT [Catador], [Matrícula], [Funcao],  [AuxilioCatador], [Unidade] FROM CATADORES WHERE [Funcao] = 'CATADOR' and [Unidade] = '" + cbb_AssociacaoCatador.Text + "' and [AuxilioCatador] = 'Recebe' ORDER BY Catador ASC ;";

                        DataTable dtCatadorImpressao = ConexaoBancodeDados.dql(vqueryCatadorImpressao, NomedoServidor);
                        for (int i = 0; i < dtCatadorImpressao.Rows.Count; i++)
                        {
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Catador"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Matrícula"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Funcao"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("AuxilioCatador"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Unidade"));
                        }

                        doc.Add(Logotipo);
                      
                        doc.Add(tabela1);
                        doc.Close();

                        System.Diagnostics.Process.Start(Globais.caminhoImpressao + @"\INFORMACOES" + nomecatador + "RECEBE_AUXCAT" + data + " .pdf");

                    }
                }

                if (btn_PesquisarApenasCatador.Visible == true)
                {

                    if (dgv_CatadorGestao.Rows.Count == 0)
                    {
                        MessageBox.Show("Catador não selecionado.");
                        return;

                    }


                    else
                    {
                        string nomeassociacao = cbb_AssociacaoCatador.Text;
                        string data = DateTime.Now.ToLongDateString();
                        string dataout = string.Concat(data.Where(Char.IsDigit));
                        string servnome = NomedoServidor;
                        string nomeArquivo = Globais.caminhoImpressao + @"\INFORMACOES_DOS_CATADORES_DA" + nomeassociacao + "" + data + ".pdf";
                        FileStream arquivoPDF = new FileStream(nomeArquivo, FileMode.Create);
                        Document doc = new Document(PageSize.A4.Rotate(), 30f, 0f, 150f, 150f);
                        doc.SetPageSize(doc.PageSize);
                        PdfWriter escritorPDF = PdfWriter.GetInstance(doc, arquivoPDF);
                        escritorPDF.PageEvent = new ImprimirInfoClassecs();
                        escritorPDF.PageEvent = new InformacoesAssociacaoSaoCatadoresImprimir(servnome, nomeassociacao);

                        doc.Open();


                        PdfPTable Cabeçalho = new PdfPTable(1);
                        Cabeçalho.TotalWidth = doc.PageSize.Width - doc.LeftMargin - doc.RightMargin;
                        Cabeçalho.DefaultCell.Border = 0;
                        Cabeçalho.AddCell(new Paragraph());

                        PdfPCell Celula = new PdfPCell((new Paragraph("Rede dos Catadores de Resíduos Sólidos Recicláveis do Estado do Ceará")));
                        Celula.HorizontalAlignment = Element.ALIGN_CENTER;
                        Celula.Border = 0;
                        Cabeçalho.AddCell(Celula);
                        Cabeçalho.AddCell(new Paragraph());
                        Cabeçalho.WriteSelectedRows(0, -1, doc.LeftMargin, escritorPDF.PageSize.GetTop(doc.TopMargin) + 120, escritorPDF.DirectContent);


                        iTextSharp.text.Image Logotipo = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\RededeCatadoresdoCeará.png");

                        Logotipo.ScaleToFit(140f, 120f);
                        Logotipo.SetAbsolutePosition(77f, 478f);

                        string dados = "";

                        try
                        {
                            SqlConnection Conectar = new SqlConnection("Data Source=DESKTOP-" + NomedoServidor + "\\SQLEXPRESS;Initial Catalog=SGRRC1;Integrated Security=True");
                            Conectar.Open();
                            SqlCommand cmd2 = new SqlCommand("select [EnderecoImagem] from [ASSOCIACAO] WHERE [Nome Fantasia] = '" + lbl_Unidade.Text + "'", Conectar);
                            var EnderecoImagem = cmd2.ExecuteScalar();
                            string Endereco = EnderecoImagem.ToString();

                            iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Endereco);
                            LogotipoAssociacao.ScaleToFit(140f, 120f);
                            LogotipoAssociacao.SetAbsolutePosition(650f, 475);
                            doc.Add(LogotipoAssociacao);
                            Conectar.Close();
                        }
                        catch
                        {

                            iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\BRANCO.png");
                            LogotipoAssociacao.ScaleToFit(140f, 120f);
                            LogotipoAssociacao.SetAbsolutePosition(650f, 475);
                            doc.Add(LogotipoAssociacao);
                        }

                 

                        PdfPTable TextoRelatorioColetasDia = new PdfPTable(1);
                        TextoRelatorioColetasDia.TotalWidth = doc.PageSize.Width - doc.LeftMargin - doc.RightMargin;
                        TextoRelatorioColetasDia.SpacingBefore = 50;
                        TextoRelatorioColetasDia.DefaultCell.Border = 0;
                        TextoRelatorioColetasDia.AddCell(new Paragraph());

                        PdfPCell CelulaRelatorioColetaDia = new PdfPCell((new Paragraph("Informações dos catadores da")));
                        CelulaRelatorioColetaDia.HorizontalAlignment = Element.ALIGN_CENTER;
                        CelulaRelatorioColetaDia.Border = 0;
                        TextoRelatorioColetasDia.AddCell(CelulaRelatorioColetaDia);
                        TextoRelatorioColetasDia.AddCell(new Paragraph());
                        TextoRelatorioColetasDia.WriteSelectedRows(0, -1, doc.LeftMargin, escritorPDF.PageSize.GetTop(doc.TopMargin) + 100, escritorPDF.DirectContent);

                        PdfPTable TextoNomeAssociacao = new PdfPTable(1);
                        TextoNomeAssociacao.TotalWidth = doc.PageSize.Width - doc.LeftMargin - doc.RightMargin;
                        TextoNomeAssociacao.SpacingBefore = 50;
                        TextoNomeAssociacao.DefaultCell.Border = 0;
                        TextoNomeAssociacao.AddCell(new Paragraph());

                        PdfPCell CelulaNomeAssociacao = new PdfPCell((new Paragraph(lbl_Unidade.Text)));
                        CelulaNomeAssociacao.HorizontalAlignment = Element.ALIGN_CENTER;
                        CelulaNomeAssociacao.Border = 0;
                        TextoNomeAssociacao.AddCell(CelulaNomeAssociacao);
                        TextoNomeAssociacao.AddCell(new Paragraph());
                        TextoNomeAssociacao.WriteSelectedRows(0, -1, doc.LeftMargin, escritorPDF.PageSize.GetTop(doc.TopMargin) + 81, escritorPDF.DirectContent);



                        PdfPTable tabela1 = new PdfPTable(5);
                        tabela1.HorizontalAlignment = Element.ALIGN_CENTER;
                        tabela1.SpacingBefore = 50;
                        tabela1.WidthPercentage = 80;
                   

                        tabela1.AddCell("Associado");
                        tabela1.AddCell("Matrícula");
                        tabela1.AddCell("Função");
                        tabela1.AddCell("Auxílio Catador");
                        tabela1.AddCell("Associação");

                        string vqueryCatadorImpressao = @"SELECT [Catador], [Matrícula], [Funcao],  [AuxilioCatador], [Unidade] FROM CATADORES WHERE [Funcao] = 'CATADOR' and [Unidade] = '" + cbb_AssociacaoCatador.Text + "' ORDER BY Catador ASC ;";

                        DataTable dtCatadorImpressao = ConexaoBancodeDados.dql(vqueryCatadorImpressao, NomedoServidor);
                        for (int i = 0; i < dtCatadorImpressao.Rows.Count; i++)
                        {
                            tabela1.AddCell(new PdfPCell()).AddElement(new Paragraph(dtCatadorImpressao.Rows[i].Field<string>("Catador"), new iTextSharp.text.Font(iTextSharp.text.Font.NORMAL, 10, (int)System.Drawing.FontStyle.Regular)));
                            tabela1.AddCell(new PdfPCell()).AddElement(new Paragraph(dtCatadorImpressao.Rows[i].Field<string>("Matrícula"), new iTextSharp.text.Font(iTextSharp.text.Font.NORMAL, 10, (int)System.Drawing.FontStyle.Regular)));
                            tabela1.AddCell(new PdfPCell()).AddElement(new Paragraph(dtCatadorImpressao.Rows[i].Field<string>("Funcao"), new iTextSharp.text.Font(iTextSharp.text.Font.NORMAL, 10, (int)System.Drawing.FontStyle.Regular)));
                            tabela1.AddCell(new PdfPCell()).AddElement(new Paragraph(dtCatadorImpressao.Rows[i].Field<string>("AuxilioCatador"), new iTextSharp.text.Font(iTextSharp.text.Font.NORMAL, 10, (int)System.Drawing.FontStyle.Regular)));
                            tabela1.AddCell(new PdfPCell()).AddElement(new Paragraph(dtCatadorImpressao.Rows[i].Field<string>("Unidade"), new iTextSharp.text.Font(iTextSharp.text.Font.NORMAL, 10, (int)System.Drawing.FontStyle.Regular)));

                        }

                        doc.Add(Logotipo);
                        
                        doc.Add(tabela1);
                        doc.Close();

                        System.Diagnostics.Process.Start(Globais.caminhoImpressao + @"\INFORMACOES_DOS_CATADORES_DA" + nomeassociacao + "" + data + ".pdf");

                    }
                }

                if (btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible == true)
                {

                    if (dgv_CatadorGestao.Rows.Count == 0)
                    {
                        MessageBox.Show("Associado e matrícula não selecionados.");
                        return;

                    }


                    else
                    {
                        string nomecatador = cbb_AssociadoCatadorGestao.Text;
                        string data = DateTime.Now.ToLongDateString();
                        string dataout = string.Concat(data.Where(Char.IsDigit));
                        string nomeArquivo = Globais.caminhoImpressao + @"\INFORMACOES" + nomecatador + "" + data + ".pdf";
                        FileStream arquivoPDF = new FileStream(nomeArquivo, FileMode.Create);

                        Document doc = new Document(PageSize.A4.Rotate(), 30f, 0f, 150f, 150f);
                        doc.SetPageSize(doc.PageSize);
                        PdfWriter escritorPDF = PdfWriter.GetInstance(doc, arquivoPDF);
                        escritorPDF.PageEvent = new ImprimirInfoClassecs();

                        iTextSharp.text.Image Logotipo = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\RededeCatadoresdoCeará.png");
                        Logotipo.ScaleToFit(140f, 120f);
                        Logotipo.SetAbsolutePosition(77f, 478f);

                        doc.Open();
                        string dados = "";

                        try
                        {
                            SqlConnection Conectar = new SqlConnection("Data Source=DESKTOP-" + NomedoServidor + "\\SQLEXPRESS;Initial Catalog=SGRRC1;Integrated Security=True");
                            Conectar.Open();
                            SqlCommand cmd2 = new SqlCommand("select [EnderecoImagem] from [ASSOCIACAO] WHERE [Nome Fantasia] = '" + lbl_Unidade.Text + "'", Conectar);
                            var EnderecoImagem = cmd2.ExecuteScalar();
                            string Endereco = EnderecoImagem.ToString();

                            iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Endereco);
                            LogotipoAssociacao.ScaleToFit(140f, 120f);
                            LogotipoAssociacao.SetAbsolutePosition(650f, 475);
                            doc.Add(LogotipoAssociacao);
                            Conectar.Close();
                        }
                        catch
                        {

                            iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\BRANCO.png");
                            LogotipoAssociacao.ScaleToFit(140f, 120f);
                            LogotipoAssociacao.SetAbsolutePosition(650f, 475);
                            doc.Add(LogotipoAssociacao);
                        }

                        Paragraph paragrafo = new Paragraph(dados, new iTextSharp.text.Font(iTextSharp.text.Font.NORMAL, 12, (int)System.Drawing.FontStyle.Bold));
                        paragrafo.Alignment = Element.ALIGN_RIGHT;
                        paragrafo.Add("Rede dos Catadores de Resíduos Sólidos Recicláveis do Estado do Ceará");

                        Paragraph paragrafo2 = new Paragraph(dados, new iTextSharp.text.Font(iTextSharp.text.Font.NORMAL, 12, (int)System.Drawing.FontStyle.Bold));
                        paragrafo2.Alignment = Element.ALIGN_CENTER;
                        paragrafo2.Add("Informaçoes do " + nomecatador + " " + data);

                        Paragraph paragrafo3 = new Paragraph(dados, new iTextSharp.text.Font(iTextSharp.text.Font.NORMAL, 12, (int)System.Drawing.FontStyle.Bold));
                        paragrafo3.Alignment = Element.ALIGN_CENTER;
                        paragrafo3.Add(this.dgv_CatadorGestao.CurrentRow.Cells[1].Value.ToString());


                        PdfPTable tabela1 = new PdfPTable(5);
                        tabela1.HorizontalAlignment = Element.ALIGN_CENTER;
                        tabela1.SpacingBefore = 50;
                        tabela1.WidthPercentage = 80;

                        tabela1.AddCell("Associado");
                        tabela1.AddCell("MatrÍcula");
                        tabela1.AddCell("Função");
                        tabela1.AddCell("Auxílio Catador");
                        tabela1.AddCell("Associação");

                        Criptografia cryptography = new Criptografia(System.Configuration.ConfigurationManager.AppSettings[""]);
                        string MatriculaCrip = (this.dgv_CatadorGestao.CurrentRow.Cells[19].Value.ToString());
                        string vqueryCatadorImpressao = @"SELECT [Catador], [Matrícula], [Funcao],  [AuxilioCatador], [Unidade] FROM CATADORES WHERE [Matrícula] ='" + MatriculaCrip + "' AND [Catador] = '" + cbb_AssociadoCatadorGestao.Text + "' ORDER BY Catador ASC ;";

                        DataTable dtCatadorImpressao = ConexaoBancodeDados.dql(vqueryCatadorImpressao, NomedoServidor);
                        for (int i = 0; i < dtCatadorImpressao.Rows.Count; i++)
                        {
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Catador"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Matrícula"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Funcao"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("AuxilioCatador"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Unidade"));
                        }

                        doc.Add(Logotipo);
                        doc.Add(paragrafo);
                        doc.Add(paragrafo2);
                        doc.Add(paragrafo3);
                        doc.Add(tabela1);
                        doc.Close();
                        System.Diagnostics.Process.Start(Globais.caminhoImpressao + @"\INFORMACOES" + nomecatador + "" + data + ".pdf");

                    }
                }

                if (btn_PesquisarporAssociacaoeMatricula.Visible == true)
                {

                    if (dgv_CatadorGestao.Rows.Count == 0 && cbb_AssociacaoCatador.SelectedIndex != -1 && txt_MatriculaGestaoCatador.Text != "")
                    {
                        MessageBox.Show("Associação e matrícula não selecionados.");
                        return;
                    }

                    else
                    {
                        string nomecatador = cbb_AssociacaoCatador.Text;
                        string matricula = txt_MatriculaGestaoCatador.Text;
                        string nomeArquivo = Globais.caminhoImpressao + @"\INFORMACOES" + nomecatador + "" + matricula + ".pdf";
                        FileStream arquivoPDF = new FileStream(nomeArquivo, FileMode.Create);

                        Document doc = new Document(PageSize.A4.Rotate(), 30f, 0f, 150f, 150f);
                        doc.SetPageSize(doc.PageSize);
                        PdfWriter escritorPDF = PdfWriter.GetInstance(doc, arquivoPDF);
                        escritorPDF.PageEvent = new ImprimirInfoClassecs();
                        escritorPDF.PageEvent = new AssociadoInfoImprimir(lbl_NomedoServidor.Text, nomecatador, matricula);
                        //escritorPDF.PageEvent = new AssociacaoeMatriculaImprimir(NomedoServidor, lbl_Unidade.Text, nomecatador);
                        //É necessário manter caso o documento só gere 1 página.

                        iTextSharp.text.Image Logotipo = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\RededeCatadoresdoCeará.png");
                        Logotipo.ScaleToFit(140f, 120f);
                        Logotipo.SetAbsolutePosition(77f, 478f);

                        doc.Open();
                        string dados = "";

                        
                        try
                        {
                            SqlConnection Conectar = new SqlConnection("Data Source=DESKTOP-" + NomedoServidor + "\\SQLEXPRESS;Initial Catalog=SGRRC1;Integrated Security=True");
                            Conectar.Open();
                            SqlCommand cmd2 = new SqlCommand("select [EnderecoImagem] from [ASSOCIACAO] WHERE [Nome Fantasia] = '" + lbl_Unidade.Text + "'", Conectar);
                            var EnderecoImagem = cmd2.ExecuteScalar();
                            string Endereco = EnderecoImagem.ToString();

                            iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Endereco);
                            LogotipoAssociacao.ScaleToFit(140f, 120f);
                            LogotipoAssociacao.SetAbsolutePosition(650f, 475);
                            doc.Add(LogotipoAssociacao);
                            Conectar.Close();
                        }
                        catch
                        {

                            iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\BRANCO.png");
                            LogotipoAssociacao.ScaleToFit(140f, 120f);
                            LogotipoAssociacao.SetAbsolutePosition(650f, 478);
                            doc.Add(LogotipoAssociacao);
                        }

                        PdfPTable tabela1 = new PdfPTable(5);
                        tabela1.HorizontalAlignment = Element.ALIGN_CENTER;
                        tabela1.SpacingBefore = 50;
                        tabela1.WidthPercentage = 80;
                        tabela1.AddCell("Associado");
                        tabela1.AddCell("MatrÍcula");
                        tabela1.AddCell("Função");
                        tabela1.AddCell("Auxílio Catador");
                        tabela1.AddCell("Associação");

                        Criptografia cryptography = new Criptografia(System.Configuration.ConfigurationManager.AppSettings[""]);
                        string MatriculaCrip = (this.dgv_CatadorGestao.CurrentRow.Cells[19].Value.ToString());
                        string vqueryCatadorImpressao = @"SELECT [Catador], [Matrícula], [Funcao],  [AuxilioCatador], [Unidade] FROM CATADORES WHERE [Matrícula] ='" + MatriculaCrip + "' AND [Unidade] = '" + cbb_AssociacaoCatador.Text + "' ORDER BY Catador ASC ;";

                        DataTable dtCatadorImpressao = ConexaoBancodeDados.dql(vqueryCatadorImpressao, NomedoServidor);
                        for (int i = 0; i < dtCatadorImpressao.Rows.Count; i++)
                        {
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Catador"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Matrícula"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Funcao"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("AuxilioCatador"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Unidade"));
                        }

                        doc.Add(Logotipo);
                      
                        doc.Add(tabela1);
                        doc.Close();
                        System.Diagnostics.Process.Start(Globais.caminhoImpressao + @"\INFORMACOES" + nomecatador + "" + matricula + ".pdf");

                    }
                }


                if (btn_PesquisarPorCatadorCatadorGestao.Visible == true)
                {

                    if (dgv_CatadorGestao.Rows.Count == 0)
                    {
                        MessageBox.Show("Associado não selecionado.");
                        return;

                    }


                    else
                    {
                        string nomecatador = cbb_AssociadoCatadorGestao.Text;

                        string nomeArquivo = Globais.caminhoImpressao + @"\INFORMACOES" + nomecatador + ".pdf";
                        FileStream arquivoPDF = new FileStream(nomeArquivo, FileMode.Create);

                        Document doc = new Document(PageSize.A4.Rotate(), 30f, 0f, 150f, 150f);
                        doc.SetPageSize(doc.PageSize);

                        PdfWriter escritorPDF = PdfWriter.GetInstance(doc, arquivoPDF);
                        escritorPDF.PageEvent = new ImprimirInfoClassecs();
                        escritorPDF.PageEvent = new AssociadoInfoImprimir(lbl_NomedoServidor.Text, lbl_Unidade.Text, this.dgv_CatadorGestao.CurrentRow.Cells[1].Value.ToString());

                        doc.Open();
                        string dados = "";

                     
                        PdfPTable tabela1 = new PdfPTable(5);
                        
                        tabela1.TotalWidth = 500;
                        tabela1.AddCell("Associado");
                        tabela1.AddCell("MatrÍcula");
                        tabela1.AddCell("Função");
                        tabela1.AddCell("Auxílio Catador");
                        tabela1.AddCell("Associação");

                        Criptografia cryptography = new Criptografia(System.Configuration.ConfigurationManager.AppSettings[""]);
                        string vqueryCatadorImpressao = @"SELECT [Catador], [Matrícula], [Funcao],  [AuxilioCatador], [Unidade] FROM CATADORES WHERE [Catador] = '" + this.dgv_CatadorGestao.CurrentRow.Cells[1].Value.ToString() + "' ORDER BY Catador ASC ;";
                        DataTable dtCatadorImpressao = ConexaoBancodeDados.dql(vqueryCatadorImpressao, NomedoServidor);
                        for (int i = 0; i < dtCatadorImpressao.Rows.Count; i++)
                        {
                        
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Catador"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Matrícula"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Funcao"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("AuxilioCatador"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Unidade"));


                        }




                        doc.Add(tabela1);
                 

                        doc.Close();
                        System.Diagnostics.Process.Start(Globais.caminhoImpressao + @"\INFORMACOES" + nomecatador + ".pdf");

                    }
                }



                if (btn_PesquisarporMatriculaCatadorGestao.Visible == true && cbb_AssociadoCatadorGestao.SelectedIndex != -1)
                {

                    if (dgv_CatadorGestao.Rows.Count == 0)
                    {
                        MessageBox.Show("Matrícula não informada.");
                        return;

                    }


                    else
                    {
                        string nomecatador = cbb_AssociadoCatadorGestao.Text;

                        string nomeArquivo = Globais.caminhoImpressao + @"\INFORMACOES" + nomecatador + ".pdf";
                        FileStream arquivoPDF = new FileStream(nomeArquivo, FileMode.Create);

                        Document doc = new Document(PageSize.A4.Rotate(), 30f, 0f, 150f, 150f);
                        doc.SetPageSize(doc.PageSize);
                        PdfWriter escritorPDF = PdfWriter.GetInstance(doc, arquivoPDF);
                        escritorPDF.PageEvent = new ImprimirInfoClassecs();
                        escritorPDF.PageEvent = new AssociadoInfoImprimir(lbl_NomedoServidor.Text, lbl_Unidade.Text, nomecatador);

                        iTextSharp.text.Image Logotipo = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\RededeCatadoresdoCeará.png");
                        Logotipo.ScaleToFit(140f, 120f);
                        Logotipo.SetAbsolutePosition(77f, 478f);

                        doc.Open();
                        string dados = "";

                        try
                        {
                            SqlConnection Conectar = new SqlConnection("Data Source=DESKTOP-" + NomedoServidor + "\\SQLEXPRESS;Initial Catalog=SGRRC1;Integrated Security=True");
                            Conectar.Open();
                            SqlCommand cmd2 = new SqlCommand("select [EnderecoImagem] from [ASSOCIACAO] WHERE [Nome Fantasia] = '" + lbl_Unidade.Text + "'", Conectar);
                            var EnderecoImagem = cmd2.ExecuteScalar();
                            string Endereco = EnderecoImagem.ToString();

                            iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Endereco);
                            LogotipoAssociacao.ScaleToFit(140f, 120f);
                            LogotipoAssociacao.SetAbsolutePosition(650f, 475);
                            doc.Add(LogotipoAssociacao);
                            Conectar.Close();
                        }
                        catch
                        {

                            iTextSharp.text.Image LogotipoAssociacao = iTextSharp.text.Image.GetInstance(Globais.caminho + @"\BRANCO.png");
                            LogotipoAssociacao.ScaleToFit(140f, 120f);
                            LogotipoAssociacao.SetAbsolutePosition(650f, 478);
                            doc.Add(LogotipoAssociacao);
                        }

                        PdfPTable tabela1 = new PdfPTable(5);
                        tabela1.SpacingBefore = 50;
                        tabela1.WidthPercentage = 80;
                        tabela1.AddCell("Catador");
                        tabela1.AddCell("MatrÍcula");
                        tabela1.AddCell("Função");
                        tabela1.AddCell("Auxílio Catador");
                        tabela1.AddCell("Associação");

                        Criptografia cryptography = new Criptografia(System.Configuration.ConfigurationManager.AppSettings[""]);
                        string MatriculaCrip = (this.dgv_CatadorGestao.CurrentRow.Cells[19].Value.ToString());
                        string vqueryCatadorImpressao = @"SELECT [Catador], [Matrícula], [Funcao],  [AuxilioCatador], [Unidade] FROM CATADORES WHERE [Matrícula] ='" + MatriculaCrip + "' ORDER BY Catador ASC ;";

                        DataTable dtCatadorImpressao = ConexaoBancodeDados.dql(vqueryCatadorImpressao, NomedoServidor);
                        for (int i = 0; i < dtCatadorImpressao.Rows.Count; i++)
                        {
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Catador"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Matrícula"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Funcao"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("AuxilioCatador"));
                            tabela1.AddCell(dtCatadorImpressao.Rows[i].Field<string>("Unidade"));

                        }

                        doc.Add(Logotipo);
                        
                        doc.Add(tabela1);
                        doc.Close();
                        System.Diagnostics.Process.Start(Globais.caminhoImpressao + @"\INFORMACOES" + nomecatador + ".pdf");

                    }
                }
            }

            catch
            {
                MessageBox.Show("Pasta 'Impressão' não encontrada.");
                return;

            }
        

    }

        //Eventos de marcação do radiobutton porAssociação
        private void rdb_porAssociacao_CheckedChanged(object sender, EventArgs e)
        {
            chb_ApenasCatador.Visible = true;
            
            cbb_AssociadoCatadorGestao.Visible = false;
            cbb_AssociadoCatadorGestao.Enabled = false; 
            cbb_AssociacaoCatador.Visible = true;
            cbb_AssociacaoCatador.Enabled = true;

            rdb_PorAssociadoColetasGestao.Checked = false;
            
            lbl_Associacao.Visible = true;
            lbl_CatadorColetasGestao.Visible = false;
            txt_MatriculaGestaoCatador.ReadOnly = false;
            txt_MatriculaGestaoCatador.BackColor = Color.LightGray;

            btn_PesquisarporAssociacaoeMatricula.Visible = false;
            btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible = false;
            btn_AuxilioCatador.Visible = false;
            btn_PesquisarporMatriculaCatadorGestao.Visible = false;
            btn_PesquisarPorCatadorCatadorGestao.Visible = false;
            btn_PesquisarporAssociacaoeMatricula.Visible = false;
            btn_PorAssociacaoCatador.Visible = true;
            
            if (rdb_porData_ColetasGestao.Checked == true)
            {
                btn_PesquisarporAssociacaoeMatricula.Visible = true;
                btn_PesquisarporMatriculaCatadorGestao.Visible = false;
                btn_PesquisarPorCatadorCatadorGestao.Visible = false;
                btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible = false;
                btn_PorAssociacaoCatador.Visible = false;
                btn_AuxilioCatador.Visible = false;
            }

            if (chb_ApenasCatador.Checked == true)
            {
                btn_PesquisarporAssociacaoeMatricula.Visible = false;
                btn_PesquisarporMatriculaCatadorGestao.Visible = false;
                btn_PesquisarPorCatadorCatadorGestao.Visible = false;
                btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible = false;
                btn_PorAssociacaoCatador.Visible = false;
                btn_PesquisarApenasCatador.Visible = true;
                btn_AuxilioCatador.Visible = false;
            }

            if (chb_ApenasCatador.Checked == true && chb_AuxilioCatador.Checked == true)
            {
                btn_PesquisarporAssociacaoeMatricula.Visible = false;
                btn_PesquisarporMatriculaCatadorGestao.Visible = false;
                btn_PesquisarPorCatadorCatadorGestao.Visible = false;
                btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible = false;
                btn_PorAssociacaoCatador.Visible = false;
                btn_PesquisarApenasCatador.Visible = false;
                btn_AuxilioCatador.Visible = true;
            }
        }
       
        //Eventos de busca por Associação e Matrícula
        private void btn_MostrarTodos_Click(object sender, EventArgs e)
        {
            string NomedoServidor = lbl_NomedoServidor.Text;
            if (txt_MatriculaGestaoCatador.Text != "")
            {
                string Associacao = cbb_AssociacaoCatador.Text;
                string Matricula = txt_MatriculaGestaoCatador.Text;
                string vqueryAssociacaoeMatricula = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula]  FROM [CATADORES] WHERE [Unidade] = '" + Associacao + "' AND [Matrícula] = '" + Matricula + "' ORDER BY Catador ASC ;";
                dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacaoeMatricula, NomedoServidor);


                lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();
            }
            else
            {
                MessageBox.Show("Digite um valor de matrícula.");
                return;


            }

        }
        
        //Eventos de busca por Associação
        private void btn_PorAssociacaoCatador_Click(object sender, EventArgs e)
        {
            string NomedoServidor = lbl_NomedoServidor.Text;
            string Associacao = cbb_AssociacaoCatador.Text;
            string vqueryAssociacao = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula] FROM [CATADORES] WHERE [Unidade] = '" + Associacao + "' ORDER BY Catador ASC ;";
            dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacao, NomedoServidor);



            lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();

        }   
        
        //Atualização da visibilidade dos botões de busca de Apenas Catador, Auxílio Catador, e por Associação
        private void CatadorGestao_MouseEnter(object sender, EventArgs e)
        {
            string NomedoServidor = lbl_NomedoServidor.Text;

            if (rdb_MostrarTodos.Checked == false && rdb_PorAssociadoColetasGestao.Checked == false && rdb_porData_ColetasGestao.Checked == false)
            {
                lbl_CatadorColetasGestao.Visible = true;
                cbb_AssociadoCatadorGestao.Visible = true;
            }

            if (chb_ApenasCatador.Checked == true && chb_AuxilioCatador.Checked == true)
            {
                btn_PesquisarporAssociacaoeMatricula.Visible = false;
                btn_PesquisarporMatriculaCatadorGestao.Visible = false;
                btn_PesquisarPorCatadorCatadorGestao.Visible = false;
                btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible = false;
                btn_PorAssociacaoCatador.Visible = false;
                btn_PesquisarApenasCatador.Visible = false;
                btn_AuxilioCatador.Visible = true;
            }

            if (chb_ApenasCatador.Checked == true && chb_AuxilioCatador.Checked == false)
            {
                btn_PesquisarporAssociacaoeMatricula.Visible = false;
                btn_PesquisarporMatriculaCatadorGestao.Visible = false;
                btn_PesquisarPorCatadorCatadorGestao.Visible = false;
                btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible = false;
                btn_PorAssociacaoCatador.Visible = false;
                btn_PesquisarApenasCatador.Visible = true;
                btn_AuxilioCatador.Visible = false;
            }

            if (chb_ApenasCatador.Checked == false && chb_AuxilioCatador.Checked == false && rdb_MostrarTodos.Checked == true && rdb_PorAssociadoColetasGestao.Checked == false && rdb_porData_ColetasGestao.Checked == false)
            {
                btn_PesquisarporAssociacaoeMatricula.Visible = false;
                btn_PesquisarporMatriculaCatadorGestao.Visible = false;
                btn_PesquisarPorCatadorCatadorGestao.Visible = false;
                btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible = false;
                btn_PorAssociacaoCatador.Visible = true;
                btn_PesquisarApenasCatador.Visible = false;
                btn_AuxilioCatador.Visible = false;
            }

        }
        
        //Atualização do Data Grid View após alterações no banco de dados.
        private void dgv_CatadorGestao_MouseEnter(object sender, EventArgs e)
        {
            btn_EditarCatadorGestao.Enabled = true;
            string NomedoServidor = lbl_NomedoServidor.Text;

            if (dgv_CatadorGestao.RowCount != 0)
            {
                Criptografia cryptography = new Criptografia(System.Configuration.ConfigurationManager.AppSettings[""]);
                if (btn_PesquisarApenasCatador.Visible == true)
                {
                    string Associacao = cbb_AssociacaoCatador.Text;
                    string vqueryAssociacao = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula] FROM [CATADORES] WHERE [Unidade] = '" + Associacao + "' AND [Funcao] = 'CATADOR' ORDER BY Catador ASC ;";
                    dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacao, NomedoServidor);



                    lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();


                }

               
                if (btn_AuxilioCatador.Visible == true)
                {
                    string Associacao = cbb_AssociacaoCatador.Text;
                    string vqueryAssociacao = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula] FROM [CATADORES] WHERE [Unidade] = '" + Associacao + "' AND [Funcao] = 'CATADOR' AND [AuxilioCatador] = 'Recebe' ORDER BY Catador ASC ;";
                    dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacao, NomedoServidor);



                    lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();


                }

                if (btn_PesquisarporMatriculaCatadorGestao.Visible == true)
                {

                    string Matricula = txt_MatriculaGestaoCatador.Text;
                    string vqueryCatador = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP],[AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula]  FROM [CATADORES] WHERE [Matrícula] ='" + Matricula + "'ORDER BY Catador ASC ;";
                    dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatador, NomedoServidor);

                    lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();
                }

                if (btn_PesquisarPorCatadorCatadorGestao.Visible == true)
                {
                        string Catador = cbb_AssociadoCatadorGestao.Text;
                        string vqueryCatador = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP],[AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula] FROM [CATADORES] WHERE [Catador] = '"+Catador+"' ORDER BY Catador ASC ;";
                        dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatador, NomedoServidor);

                        lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();
                }


                if (btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible == true)
                {

                        string Matricula = txt_MatriculaGestaoCatador.Text;

                        string vqueryCatador = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula]  FROM [CATADORES] WHERE [Matrícula] = '" + Matricula + "' ORDER BY Catador ASC";
                        dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatador, NomedoServidor);
                        lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();

                }


                if (btn_PorAssociacaoCatador.Visible == true)
                {
                    string Associacao = cbb_AssociacaoCatador.Text;
                    string vqueryAssociacao = @"SELECT*FROM [CATADORES] WHERE [Unidade] = '" + Associacao + "' ORDER BY Catador ASC ;";
                    dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacao, NomedoServidor);

                    lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();

                }

                if (btn_PesquisarporAssociacaoeMatricula.Visible == true)
                {

                    if (txt_MatriculaGestaoCatador.Text != "")
                    {
                        string Associacao = cbb_AssociacaoCatador.Text;
                        string Matricula = txt_MatriculaGestaoCatador.Text;
                        string vqueryAssociacaoeMatricula = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao] , [Matrícula] FROM [CATADORES] WHERE [Unidade] = '" + Associacao + "' AND [Matrícula] = '" + Matricula + "' ORDER BY Catador ASC ;";
                        dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacaoeMatricula, NomedoServidor);


                        lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();
                    }

                }



                if (btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible == true)
                {
                    string DatadeNascimento = txt_MatriculaGestaoCatador.Text;
                    string Catador = cbb_AssociadoCatadorGestao.Text;
                    string vqueryColetas = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula] FROM [CATADORES] WHERE [Catador] ='" + Catador + "' AND [Matrícula] ='" + DatadeNascimento + "'ORDER BY Catador ASC ;";
                    dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryColetas, NomedoServidor);

                    lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();

                }

                if (btn_PesquisarApenasCatador.Visible == true)
                {
                    string Associacao = cbb_AssociacaoCatador.Text;
                    string vqueryAssociacao = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula] FROM [CATADORES] WHERE [Unidade] = '" + Associacao + "' AND [Funcao] = 'CATADOR' ORDER BY Catador ASC ;";
                    dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacao, NomedoServidor);



                    lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();


                }
            }
        }
        
        //Atualização do botão por Associação.
        private void cbb_AssociacaoCatador_SelectedIndexChanged(object sender, EventArgs e)
        {
            if(chb_ApenasCatador.Checked == true || btn_PesquisarporMatriculaCatadorGestao.Visible == true)
            {
                btn_PorAssociacaoCatador.Visible = false;
            }

        } 
        
        //Carregamento do formulário Funções
        private void btn_Funcoes_Click(object sender, EventArgs e)
        {
            if (cbb_AssociacaoCatador.Text != "")
            {
                Funções funcao = new Funções();
                funcao.txt_AssociacaoFuncoes.Text =  lbl_Unidade.Text;
                funcao.lbl_NomedoServidor.Text = lbl_NomedoServidor.Text;
                funcao.ShowDialog();
            }
        }
        
        //Eventos de marcação do checkbox Apenas Catador
        private void chb_ApenasCatador_CheckedChanged(object sender, EventArgs e)
        {
            if(chb_ApenasCatador.Checked == true)
            {
                btn_PesquisarApenasCatador.Visible = true;

                chb_AuxilioCatador.Visible = true;

                btn_PesquisarPorCatadorCatadorGestao.Visible = false;
                btn_PesquisarAssociadoeMatriculaCatadorGestao.Visible = false;
                btn_PesquisarporMatriculaCatadorGestao.Visible = false;
                btn_PesquisarporAssociacaoeMatricula.Visible = false;
                btn_PorAssociacaoCatador.Visible = false;
                
            }
        }
       
        //Eventos de busca Apenas Catador.
        private void btn_PesquisarApenasCatador_Click(object sender, EventArgs e)
        {
            string NomedoServidor = lbl_NomedoServidor.Text;
            Criptografia cryptography = new Criptografia(System.Configuration.ConfigurationManager.AppSettings[""]);
            string catadorpalavra = @"CATADOR";
            string catadorEncrip = cryptography.Encriptar(catadorpalavra);
            string Associacao = cbb_AssociacaoCatador.Text;

           
            if (cbb_AssociacaoCatador.SelectedIndex != -1 && chb_ApenasCatador.Checked == true)
            {

                string vqueryAssociacao = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], 
                [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], 
                [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula] FROM [CATADORES]
                WHERE [Unidade] = '" + Associacao + "' AND [Funcao] = 'CATADOR' ORDER BY Catador ASC ;";
                dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacao, NomedoServidor);

                lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();


            }

        }
        
        //Eventos de busca por associado catador que recebe auxílio catador.
        private void btn_AuxilioCatador_Click(object sender, EventArgs e)
        {
            Criptografia cryptography = new Criptografia(System.Configuration.ConfigurationManager.AppSettings[""]);
            string NomedoServidor = lbl_NomedoServidor.Text;

            string catadorEncrip = cryptography.Encriptar("CATADOR");
            if (cbb_AssociacaoCatador.SelectedIndex != -1 && chb_ApenasCatador.Checked == true)
            {
                string Associacao = cbb_AssociacaoCatador.Text;
                string vqueryAssociacao = @"SELECT [ID_Catador], [Catador], [Data de Nascimento], [Data de Matrícula], [Gênero], [RG], [CPF], [NIS], [Telefone], [Cidade], [Bairro], [Rua], [CEP], [AuxilioCatador], [Administrador], [Unidade], [Funcao], [Matrícula] FROM [CATADORES] WHERE [Unidade] = '" + Associacao + "' AND [Funcao] = 'CATADOR' AND [AuxilioCatador] = 'Recebe' ORDER BY Catador ASC ;";
                dgv_CatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryAssociacao, NomedoServidor);



                lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();


            }
        }
        
        //Fechar o formulário.
        private void btn_CancelarEditarColetasGestao_Click(object sender, EventArgs e)
        {
            this.Close();
        }
        
        //Atualização do combobox Catador após possível alteração no nome.
        private void cbb_CatadorCatadorGestao_MouseEnter(object sender, EventArgs e)
        {
            string NomedoServidor = lbl_NomedoServidor.Text;
            string vqueryCatadorcbb = @"SELECT [Catador] FROM CATADORES ORDER BY [Catador] ASC ;";
            cbb_AssociadoCatadorGestao.DataSource = ConexaoBancodeDados.dql(vqueryCatadorcbb, NomedoServidor);
            cbb_AssociadoCatadorGestao.DisplayMember = ("Catador");

            lbl_TotaldeCatadoresNumero.Text = Convert.ToInt32(dgv_CatadorGestao.Rows.Count).ToString();
           
        }
        private void cbb_AssociacaoCatador_MouseEnter(object sender, EventArgs e)
        {
            string NomedoServidor = lbl_NomedoServidor.Text;
            string vqueryAssociacao = @"SELECT [Nome Fantasia] FROM ASSOCIACAO ORDER BY [Nome Fantasia] ASC";
            cbb_AssociacaoCatador.DataSource = ConexaoBancodeDados.dql(vqueryAssociacao, NomedoServidor);
            cbb_AssociacaoCatador.DisplayMember = "Nome Fantasia";
            cbb_AssociadoCatadorGestao.DisplayMember = ("Nome Fantasia");

        }        
    }
}

    

